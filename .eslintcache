[{"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\index.js":"1","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\App.js":"2","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\store\\index.js":"3","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\routes.js":"4","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\LoadingSpinner\\LoadingSpinner.js":"5","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Landing\\Landing.js":"6","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\GetStarted\\GetStarted.js":"7","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\AdminRegister\\AdminRegister.js":"8","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\AdminOption\\AdminOption.js":"9","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\AdminLogin\\AdminLogin.js":"10","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\AdminRegister\\RegistrationOverlay.js":"11","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\view\\Group.js":"12","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\DashboardLayout.js":"13","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\view\\Home.js":"14","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\store\\college\\index.js":"15","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\store\\auth\\index.js":"16","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\store\\group\\index.js":"17","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\store\\isLoading\\index.js":"18","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\NavBar\\index.js":"19","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\Navbar\\Navbar.js":"20","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\CustomButton\\CustomButton.js":"21","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\Card\\Card.js":"22","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\CustomTypography\\Typography.js":"23","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\CustomInput\\CustomInput.js":"24","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\Select\\Select.js":"25","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\TopBar\\TopBar.js":"26","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\assets\\style\\pages\\AdminRegister\\RegistrationOverlay.js":"27","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\assets\\style\\pages\\AdminRegister\\AdminRegister.js":"28","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\Modal\\index.js":"29","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\NavBar\\NavItem.js":"30","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\store\\notification\\index.js":"31","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\Notification\\Notification.js":"32","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\store\\message\\index.js":"33"},{"size":590,"mtime":1616222029161,"results":"34","hashOfConfig":"35"},{"size":670,"mtime":1616309190387,"results":"36","hashOfConfig":"35"},{"size":1062,"mtime":1616308777244,"results":"37","hashOfConfig":"35"},{"size":1505,"mtime":1616222029169,"results":"38","hashOfConfig":"35"},{"size":336,"mtime":1616222029158,"results":"39","hashOfConfig":"35"},{"size":2381,"mtime":1616222029169,"results":"40","hashOfConfig":"35"},{"size":1848,"mtime":1616222029168,"results":"41","hashOfConfig":"35"},{"size":8520,"mtime":1616222029164,"results":"42","hashOfConfig":"35"},{"size":1857,"mtime":1616222029163,"results":"43","hashOfConfig":"35"},{"size":4940,"mtime":1616222029163,"results":"44","hashOfConfig":"35"},{"size":1515,"mtime":1616222029164,"results":"45","hashOfConfig":"35"},{"size":11603,"mtime":1616357698433,"results":"46","hashOfConfig":"35"},{"size":2142,"mtime":1616222029165,"results":"47","hashOfConfig":"35"},{"size":163,"mtime":1616222029167,"results":"48","hashOfConfig":"35"},{"size":1680,"mtime":1616309368590,"results":"49","hashOfConfig":"35"},{"size":1781,"mtime":1616309318354,"results":"50","hashOfConfig":"35"},{"size":6042,"mtime":1616358742024,"results":"51","hashOfConfig":"35"},{"size":259,"mtime":1616222029172,"results":"52","hashOfConfig":"35"},{"size":6380,"mtime":1616357632942,"results":"53","hashOfConfig":"35"},{"size":1416,"mtime":1616222029159,"results":"54","hashOfConfig":"35"},{"size":1971,"mtime":1616222029155,"results":"55","hashOfConfig":"35"},{"size":1835,"mtime":1616222029154,"results":"56","hashOfConfig":"35"},{"size":629,"mtime":1616222029156,"results":"57","hashOfConfig":"35"},{"size":1520,"mtime":1616222029156,"results":"58","hashOfConfig":"35"},{"size":1187,"mtime":1616222029160,"results":"59","hashOfConfig":"35"},{"size":1702,"mtime":1616222029161,"results":"60","hashOfConfig":"35"},{"size":549,"mtime":1616222029152,"results":"61","hashOfConfig":"35"},{"size":670,"mtime":1616222029152,"results":"62","hashOfConfig":"35"},{"size":1189,"mtime":1616222029158,"results":"63","hashOfConfig":"35"},{"size":1679,"mtime":1616222029166,"results":"64","hashOfConfig":"35"},{"size":1265,"mtime":1616309587612,"results":"65","hashOfConfig":"35"},{"size":1678,"mtime":1616350025250,"results":"66","hashOfConfig":"35"},{"size":1642,"mtime":1616312222083,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1ntz6rp",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\index.js",[],["141","142"],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\App.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\store\\index.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\routes.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\LoadingSpinner\\LoadingSpinner.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Landing\\Landing.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\GetStarted\\GetStarted.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\AdminRegister\\AdminRegister.js",["143","144"],"import { Grid } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport Navbar from \"components/Navbar/Navbar\";\r\nimport fx from \"assets/logo/fx.png\";\r\nimport Typography from \"components/CustomTypography/Typography\";\r\nimport useStyles from \"assets/style/pages/AdminRegister/AdminRegister\";\r\nimport CustomInput from \"components/CustomInput/CustomInput\";\r\nimport CustomButton from \"components/CustomButton/CustomButton\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nconst circle = <span>&#9675;&nbsp;</span>;\r\n\r\nexport default function Landing(props) {\r\n  //States for all the input field\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mobileNumber, setMobileNumber] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [collegeName, setCollegeName] = useState(\"\");\r\n  const [collegeLinkedin, setCollegeLinkedin] = useState(\"\");\r\n  const [collegeAddress, setCollegeAddress] = useState(\"\");\r\n\r\n  /**\r\n   * Function for handling change in input field\r\n   * @param event\r\n   *\r\n   */\r\n\r\n  const handelChange = ({ target: { name: type, value } }) => {\r\n    switch (type) {\r\n      case \"Name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"Email\":\r\n        setEmail(value);\r\n        break;\r\n\r\n      case \"MobileNumber\":\r\n        setMobileNumber(value);\r\n        break;\r\n\r\n      case \"Password\":\r\n        setPassword(value);\r\n        break;\r\n\r\n      case \"ConfirmPassword\":\r\n        setConfirmPassword(value);\r\n        break;\r\n\r\n      case \"CollegeName\":\r\n        setCollegeName(value);\r\n        break;\r\n\r\n      case \"CollegeLinkedin\":\r\n        setCollegeLinkedin(value);\r\n        break;\r\n\r\n      case \"CollegeAddress\":\r\n        setCollegeAddress(value);\r\n\r\n      default:\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Function to handler Register submit\r\n   * @param event\r\n   */\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setName((name) => name.trim());\r\n    setEmail((email) => email.trim());\r\n    setMobileNumber((mobileNumber) => mobileNumber.trim());\r\n    setPassword((password) => password.trim());\r\n    setConfirmPassword((confirmPassword) => confirmPassword.trim());\r\n    setCollegeName((collegeName) => collegeName.trim());\r\n    setCollegeLinkedin((collegeLinkedin) => collegeLinkedin.trim());\r\n    setCollegeAddress((collegeAddress) => collegeAddress.trim());\r\n\r\n    //Error notification when password and confirm password didn't match\r\n    // if (password !== confirmPassword) {\r\n    //   setError({ message: \"Password didn't match\" });\r\n\r\n    //   return;\r\n    // }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"email\", email);\r\n    formData.append(\"mobile\", mobileNumber);\r\n    formData.append(\"password\", password);\r\n    formData.append(\"college_name\", collegeName);\r\n    formData.append(\"college_linked_in\", collegeLinkedin);\r\n    formData.append(\"college_add\", collegeAddress);\r\n    axios\r\n      .post(\"http://foliox.deepinferx.in/web/api/admin/register\", formData)\r\n      .then((res) => {\r\n        const { success, message } = res.data;\r\n\r\n        //if success = 0 something wrong\r\n        if (success === 0) {\r\n          setTimeout(() => {\r\n            // setError({ message });\r\n          }, 100);\r\n        }\r\n\r\n        //if success = 1 Registeration successfull\r\n        if (success === 1) {\r\n          props.history.push(\"/admin/registration-confirmation-overlay\");\r\n        }\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className={classes.root}>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        style={{\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        <Grid item className={classes.top}></Grid>\r\n        <Grid className={classes.main} item container>\r\n          <Grid item xs={12} style={{ height: \"100px\" }}>\r\n            <Navbar logo={fx} />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.title}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              align=\"center\"\r\n              component=\"p\"\r\n              fontWeight=\"800\"\r\n            >\r\n              Registration From\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            direction=\"row\"\r\n            justify=\"space-around\"\r\n            style={{ flexGrow: \"1\" }}\r\n            container\r\n          >\r\n            <Grid item className={classes.mainLeft} xs={4}>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                align=\"center\"\r\n                component=\"p\"\r\n                fontWeight=\"800\"\r\n                gutterBottom\r\n              >\r\n                Personal Details\r\n              </Typography>\r\n\r\n              <CustomInput\r\n                label=\"Name*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={name}\r\n                name=\"Name\"\r\n                onChange={handelChange}\r\n                autoFocus\r\n                required\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"E-mail*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={email}\r\n                name=\"Email\"\r\n                onChange={handelChange}\r\n                required\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"Mobile Number*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={mobileNumber}\r\n                name=\"MobileNumber\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"Password*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={password}\r\n                type=\"password\"\r\n                name=\"Password\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"Confirm Password*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={confirmPassword}\r\n                name=\"ConfirmPassword\"\r\n                type=\"password\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                align=\"center\"\r\n                component=\"p\"\r\n                fontWeight=\"800\"\r\n                gutterBottom\r\n              >\r\n                College Details\r\n              </Typography>\r\n              <CustomInput\r\n                background=\"brown\"\r\n                label=\"College Name *\"\r\n                fullWidth\r\n                value={collegeName}\r\n                name=\"CollegeName\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"College LinkedIn Profile\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={collegeLinkedin}\r\n                name=\"CollegeLinkedin\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomInput\r\n                background=\"brown\"\r\n                label=\"College Address *\"\r\n                fullWidth\r\n                multiline\r\n                rows=\"5\"\r\n                cols=\"30\"\r\n                value={collegeAddress}\r\n                name=\"CollegeAddress\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomButton\r\n                text={\"Login\"}\r\n                logo={circle}\r\n                to={\"/admin/login\"}\r\n                background=\"white\"\r\n                border=\"borderGray\"\r\n              />\r\n              <CustomButton\r\n                type=\"submit\"\r\n                text={\"Register\"}\r\n                background=\"brown\"\r\n              />\r\n            </Grid>\r\n            <Grid item container justify=\"center\" alignItems=\"center\" xs={12}>\r\n              <Typography variant=\"subtitle2\" align=\"center\">\r\n                * The (*) marked fields are required. Read our policy to know\r\n                how we use your data.\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\AdminOption\\AdminOption.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\AdminLogin\\AdminLogin.js",["145"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n//@material-ui core components\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\n\r\nimport Typography from \"components/CustomTypography/Typography\";\r\nimport CustomInput from \"components/CustomInput/CustomInput\";\r\nimport CustomButton from \"components/CustomButton/CustomButton\";\r\nimport Navbar from \"components/Navbar/Navbar\";\r\nimport Select from \"components/Select/Select\";\r\n\r\nimport fx from \"assets/logo/fx.png\";\r\nimport image from \"assets/img/admin-login-image.svg\";\r\n\r\n//action creater\r\nimport { login } from \"store/auth\";\r\nimport { loadCollegeList } from \"store/college\";\r\n\r\nconst circle = <span>&#9675;&nbsp;</span>;\r\n\r\n//style\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"100vh\",\r\n  },\r\n  form: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function AdminLogin(props) {\r\n  console.log(\"Admin Login page rendered\");\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const collegeList = useSelector((store) => store.college.list);\r\n\r\n  const [loginCredentials, setLoginCredentials] = useState({\r\n    email: undefined,\r\n    password: undefined,\r\n    college_id: undefined,\r\n  });\r\n\r\n  const setSelectedCollege = (e) => {\r\n    console.log(e.target.value);\r\n    setLoginCredentials({ ...loginCredentials, college_id: e.target.value });\r\n  };\r\n\r\n  //Dispatch action  to fetch list of registered colleges\r\n  useEffect(() => {\r\n    dispatch(loadCollegeList());\r\n  }, []);\r\n\r\n  //Form submit handler\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"college_id\", loginCredentials.college_id);\r\n    formData.append(\"email\", loginCredentials.email);\r\n    formData.append(\"password\", loginCredentials.password);\r\n\r\n    dispatch(login(formData));\r\n  };\r\n\r\n  const user = useSelector((store) => store.auth.user?.auth_token);\r\n\r\n  //If login successfull\r\n  const navigate = useNavigate();\r\n  if (user) {\r\n    navigate(\"../dashboard/home\");\r\n  }\r\n  return (\r\n    <>\r\n      <form onSubmit={submitHandler}>\r\n        <Grid className={classes.root} container direction=\"column\">\r\n          <Grid item style={{ height: \"100px\" }}>\r\n            <Navbar logo={fx} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"h4\"\r\n              align=\"center\"\r\n              component=\"p\"\r\n              fontWeight=\"800\"\r\n            >\r\n              Please enter your credentials\r\n            </Typography>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            justify=\"space-around\"\r\n            alignItems=\"center\"\r\n            className={classes.form}\r\n            direction=\"row\"\r\n          >\r\n            <Grid item xs={10} sm={4}>\r\n              <Select\r\n                background=\"brown\"\r\n                value={loginCredentials.college_id}\r\n                changeHandler={setSelectedCollege}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected hidden>\r\n                  Select college\r\n                </option>\r\n                {collegeList.map((college) => (\r\n                  <option key={college.id} value={college.id}>\r\n                    {college.college_name}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n              <CustomInput\r\n                label=\"Email\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                required\r\n                value={loginCredentials.email || \"\"}\r\n                onChange={(e) =>\r\n                  setLoginCredentials({\r\n                    ...loginCredentials,\r\n                    email: e.target.value,\r\n                  })\r\n                }\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"Password\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                required\r\n                type=\"password\"\r\n                value={loginCredentials.password || \"\"}\r\n                onChange={(e) =>\r\n                  setLoginCredentials({\r\n                    ...loginCredentials,\r\n                    password: e.target.value,\r\n                  })\r\n                }\r\n              ></CustomInput>\r\n              <CustomButton\r\n                text={\"Forgot?\"}\r\n                logo={circle}\r\n                to={\"/get-started/\"}\r\n                background=\"white\"\r\n                border=\"borderGray\"\r\n              />\r\n              <CustomButton\r\n                type=\"submit\"\r\n                text={\"Continue\"}\r\n                background=\"brown\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <img src={image} width=\"300\" alt=\"admin login\" />\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\AdminRegister\\RegistrationOverlay.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\view\\Group.js",["146","147","148","149","150"],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\DashboardLayout.js",["151","152","153"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport NavBar from \"./NavBar\";\r\nimport TopBar from \"components/TopBar/TopBar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadGroups } from \"store/group/index\";\r\nimport LoadingSpinner from \"components/LoadingSpinner/LoadingSpinner\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n    width: \"100%\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flex: \"1 1 auto\",\r\n    overflow: \"hidden\",\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: 300,\r\n    },\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n    flex: \"1 1 auto\",\r\n  },\r\n  content: {\r\n    flex: \"1 1 auto\",\r\n    overflow: \"auto\",\r\n    height: \"93vh\",\r\n    overflow: \"hidden\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      padding: 50,\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      padding: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nconst DashboardLayout = (props) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n  const admin_id = useSelector((store) => store.auth.user.access_key.admin_id);\r\n  const isLoading = useSelector((store) => store.group.isLoading);\r\n\r\n  //Load Groups\r\n  useEffect(() => {\r\n    //For now static admin id\r\n    //Later on change to dynamic id\r\n    dispatch(loadGroups(admin_id));\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LoadingSpinner open={isLoading} />\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\view\\Home.js",["154","155"],"import React, { useContext, useEffect } from \"react\";\r\n\r\nexport default function Home() {\r\n\r\n  return (\r\n    <div>\r\n      <h1>Home Page</h1>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\store\\college\\index.js",["156","157","158"],"import axios from \"axios\";\r\nimport { notificationClear,notificationError,notificationSuccess } from \"store/notification\";\r\n\r\n//constant\r\nconst COLLEGE_LIST_REQUEST = \"COLLEGE_LIST_REQUEST\";\r\nconst COLLEGE_LIST_SUCCESS = \"COLLEGE_LIST_SUCCESS\";\r\nconst COLLEGE_LIST_FAILED = \"COLLGE_LIST_FAILED\";\r\n\r\n//action creater\r\n\r\nconst collegeListRequested = () => {\r\n  return {\r\n    type: COLLEGE_LIST_REQUEST,\r\n    isLoading: true,\r\n  };\r\n};\r\n\r\nconst collegeListSuccess = (colleges) => {\r\n  return {\r\n    type: COLLEGE_LIST_SUCCESS,\r\n    payload: colleges,\r\n    isLoading: false,\r\n  };\r\n};\r\n\r\nconst collegeListFailed = () => {\r\n  return {\r\n    type: COLLEGE_LIST_FAILED,\r\n    isLoading: false,\r\n  };\r\n};\r\n\r\nconst loadCollegeList = () => {\r\n  return async (dispatch) => {\r\n    dispatch(collegeListRequested());\r\n\r\n    try {\r\n      const { data } = await axios.get(\"/gen/colleges\");\r\n      if (data.success === 0) {\r\n        throw { message: \"Something went wrong.\" };\r\n      }\r\n      dispatch(collegeListSuccess(data.colleges));\r\n    } catch (error) {\r\n      dispatch(notificationError(error.message));\r\n      dispatch(collegeListFailed());\r\n    }\r\n  };\r\n};\r\n\r\n//reducer\r\n\r\nconst initialCollegeState = {\r\n  list: [],\r\n};\r\n\r\nconst collegeReducer = (state = initialCollegeState, action) => {\r\n  switch (action.type) {\r\n    case COLLEGE_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case COLLEGE_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: action.payload,\r\n      };\r\n\r\n    case COLLEGE_LIST_FAILED:\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default collegeReducer;\r\nexport { loadCollegeList };\r\n","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\store\\auth\\index.js",["159"],"import axios from \"axios\";\r\nimport {notificationError, notificationSuccess} from \"store/notification\";\r\n\r\n//constant\r\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nconst LOGIN_FAILED = \"LOGIN_FAILED\";\r\n\r\n//action creater\r\n\r\nconst loginRequest = () => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n    isLoading: true,\r\n  };\r\n};\r\n\r\nconst loginFailed = () => {\r\n  return {\r\n    type: LOGIN_FAILED,\r\n    isLoading: false,\r\n  };\r\n};\r\n\r\nconst loginSuccess = (user) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: user,\r\n    isLoading: false,\r\n  };\r\n};\r\n\r\nconst login = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch(loginRequest());\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"http://foliox.deepinferx.in/web/api/admin/login\",\r\n        user\r\n      );\r\n\r\n      //success\r\n      if (data.success === 1) {\r\n        delete data.success;\r\n        dispatch(loginSuccess(data));\r\n      }\r\n\r\n      //login failed\r\n      else {\r\n        delete data.success;\r\n        throw data;\r\n      }\r\n    } catch (error) {\r\n      dispatch(loginFailed());\r\n      dispatch(notificationError(error.message));\r\n    }\r\n  };\r\n};\r\n\r\nconst register = (newUser) => {};\r\n\r\nconst logout = () => {};\r\n\r\n//Reducer\r\n\r\nconst initialAuthState = {\r\n  user: {},\r\n};\r\n\r\nconst authReducer = (state = initialAuthState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n\r\n    case LOGIN_FAILED:\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { login, loginSuccess, loginRequest, loginFailed, register, logout };\r\n\r\nexport default authReducer;\r\n","C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\store\\group\\index.js",["160","161","162"],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\store\\isLoading\\index.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\NavBar\\index.js",["163","164","165","166","167","168","169","170","171","172"],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\CustomButton\\CustomButton.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\Card\\Card.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\CustomTypography\\Typography.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\CustomInput\\CustomInput.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\Select\\Select.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\TopBar\\TopBar.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\assets\\style\\pages\\AdminRegister\\RegistrationOverlay.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\assets\\style\\pages\\AdminRegister\\AdminRegister.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\Modal\\index.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\NavBar\\NavItem.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\store\\notification\\index.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\components\\Notification\\Notification.js",[],"C:\\Users\\Adil\\Desktop\\FolioX-Frontend\\src\\store\\message\\index.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":63,"column":7,"nodeType":"179","messageId":"180","endLine":63,"endColumn":15},{"ruleId":"181","severity":1,"message":"182","line":101,"column":26,"nodeType":"183","messageId":"184","endLine":101,"endColumn":33},{"ruleId":"185","severity":1,"message":"186","line":55,"column":6,"nodeType":"187","endLine":55,"endColumn":8,"suggestions":"188"},{"ruleId":"181","severity":1,"message":"189","line":16,"column":21,"nodeType":"183","messageId":"184","endLine":16,"endColumn":32},{"ruleId":"181","severity":1,"message":"190","line":21,"column":10,"nodeType":"183","messageId":"184","endLine":21,"endColumn":21},{"ruleId":"181","severity":1,"message":"191","line":22,"column":31,"nodeType":"183","messageId":"184","endLine":22,"endColumn":49},{"ruleId":"192","severity":1,"message":"193","line":74,"column":5,"nodeType":"194","messageId":"195","endLine":74,"endColumn":20},{"ruleId":"196","severity":1,"message":"197","line":129,"column":35,"nodeType":"198","messageId":"199","endLine":129,"endColumn":42},{"ruleId":"181","severity":1,"message":"200","line":1,"column":38,"nodeType":"183","messageId":"184","endLine":1,"endColumn":48},{"ruleId":"192","severity":1,"message":"201","line":34,"column":5,"nodeType":"194","messageId":"195","endLine":34,"endColumn":13},{"ruleId":"185","severity":1,"message":"202","line":56,"column":6,"nodeType":"187","endLine":56,"endColumn":8,"suggestions":"203"},{"ruleId":"181","severity":1,"message":"200","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":27},{"ruleId":"181","severity":1,"message":"204","line":1,"column":29,"nodeType":"183","messageId":"184","endLine":1,"endColumn":38},{"ruleId":"181","severity":1,"message":"205","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":27},{"ruleId":"181","severity":1,"message":"206","line":2,"column":46,"nodeType":"183","messageId":"184","endLine":2,"endColumn":65},{"ruleId":"207","severity":1,"message":"208","line":40,"column":9,"nodeType":"209","messageId":"210","endLine":40,"endColumn":52},{"ruleId":"181","severity":1,"message":"206","line":2,"column":28,"nodeType":"183","messageId":"184","endLine":2,"endColumn":47},{"ruleId":"181","severity":1,"message":"211","line":11,"column":7,"nodeType":"183","messageId":"184","endLine":11,"endColumn":26},{"ruleId":"207","severity":1,"message":"208","line":119,"column":9,"nodeType":"209","messageId":"210","endLine":119,"endColumn":45},{"ruleId":"207","severity":1,"message":"208","line":154,"column":35,"nodeType":"209","messageId":"210","endLine":154,"endColumn":71},{"ruleId":"181","severity":1,"message":"200","line":1,"column":28,"nodeType":"183","messageId":"184","endLine":1,"endColumn":38},{"ruleId":"181","severity":1,"message":"212","line":2,"column":30,"nodeType":"183","messageId":"184","endLine":2,"endColumn":38},{"ruleId":"181","severity":1,"message":"213","line":8,"column":3,"nodeType":"183","messageId":"184","endLine":8,"endColumn":15},{"ruleId":"181","severity":1,"message":"214","line":16,"column":3,"nodeType":"183","messageId":"184","endLine":16,"endColumn":15},{"ruleId":"181","severity":1,"message":"215","line":18,"column":3,"nodeType":"183","messageId":"184","endLine":18,"endColumn":15},{"ruleId":"181","severity":1,"message":"216","line":21,"column":18,"nodeType":"183","messageId":"184","endLine":21,"endColumn":33},{"ruleId":"181","severity":1,"message":"217","line":23,"column":11,"nodeType":"183","messageId":"184","endLine":23,"endColumn":19},{"ruleId":"181","severity":1,"message":"218","line":25,"column":18,"nodeType":"183","messageId":"184","endLine":25,"endColumn":33},{"ruleId":"181","severity":1,"message":"219","line":27,"column":15,"nodeType":"183","messageId":"184","endLine":27,"endColumn":27},{"ruleId":"185","severity":1,"message":"220","line":110,"column":6,"nodeType":"187","endLine":110,"endColumn":25,"suggestions":"221"},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["224"],"'useNavigate' is defined but never used.","'deleteGroup' is defined but never used.","'sendMessageToGroup' is defined but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'useContext' is defined but never used.","Duplicate key 'overflow'.","React Hook useEffect has missing dependencies: 'admin_id' and 'dispatch'. Either include them or remove the dependency array.",["225"],"'useEffect' is defined but never used.","'notificationClear' is defined but never used.","'notificationSuccess' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'GROUP_DELETE_FAILED' is assigned a value but never used.","'Navigate' is defined but never used.","'ListItemLink' is defined but never used.","'ListItemText' is defined but never used.","'ListItemIcon' is defined but never used.","'AlertCircleIcon' is defined but never used.","'LockIcon' is defined but never used.","'ShoppingBagIcon' is defined but never used.","'UserPlusIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'onMobileClose' and 'openMobile'. Either include them or remove the dependency array. If 'onMobileClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["226"],"no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [dispatch]",{"range":"233","text":"234"},"Update the dependencies array to be: [admin_id, dispatch]",{"range":"235","text":"236"},"Update the dependencies array to be: [location.pathname, onMobileClose, openMobile]",{"range":"237","text":"238"},[1607,1609],"[dispatch]",[1593,1595],"[admin_id, dispatch]",[2547,2566],"[location.pathname, onMobileClose, openMobile]"]