[{"/home/adil/Code/FolioX-Frontend/src/index.js":"1","/home/adil/Code/FolioX-Frontend/src/App.js":"2","/home/adil/Code/FolioX-Frontend/src/components/LoadingSpinner/LoadingSpinner.js":"3","/home/adil/Code/FolioX-Frontend/src/routes.js":"4","/home/adil/Code/FolioX-Frontend/src/store/index.js":"5","/home/adil/Code/FolioX-Frontend/src/components/Notification/ErrorNotification.js":"6","/home/adil/Code/FolioX-Frontend/src/store/message/index.js":"7","/home/adil/Code/FolioX-Frontend/src/store/college/index.js":"8","/home/adil/Code/FolioX-Frontend/src/store/auth/index.js":"9","/home/adil/Code/FolioX-Frontend/src/pages/Admin/AdminLogin/AdminLogin.js":"10","/home/adil/Code/FolioX-Frontend/src/pages/Landing/Landing.js":"11","/home/adil/Code/FolioX-Frontend/src/pages/Admin/AdminOption/AdminOption.js":"12","/home/adil/Code/FolioX-Frontend/src/pages/Admin/AdminRegister/RegistrationOverlay.js":"13","/home/adil/Code/FolioX-Frontend/src/pages/GetStarted/GetStarted.js":"14","/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/DashboardLayout.js":"15","/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/view/Home.js":"16","/home/adil/Code/FolioX-Frontend/src/pages/Admin/AdminRegister/AdminRegister.js":"17","/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/TopBar.js":"18","/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/NavBar/index.js":"19","/home/adil/Code/FolioX-Frontend/src/components/Navbar/Navbar.js":"20","/home/adil/Code/FolioX-Frontend/src/components/Card/Card.js":"21","/home/adil/Code/FolioX-Frontend/src/components/CustomTypography/Typography.js":"22","/home/adil/Code/FolioX-Frontend/src/components/CustomInput/CustomInput.js":"23","/home/adil/Code/FolioX-Frontend/src/components/CustomButton/CustomButton.js":"24","/home/adil/Code/FolioX-Frontend/src/assets/style/pages/AdminRegister/RegistrationOverlay.js":"25","/home/adil/Code/FolioX-Frontend/src/assets/style/pages/AdminRegister/AdminRegister.js":"26","/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/NavBar/NavItem.js":"27","/home/adil/Code/FolioX-Frontend/src/assets/style/components/CustomInput/CustomInput.js":"28","/home/adil/Code/FolioX-Frontend/src/assets/style/components/CustomButton/CustomeButton.js":"29","/home/adil/Code/FolioX-Frontend/src/assets/style/components/Card/Card.js":"30","/home/adil/Code/FolioX-Frontend/src/assets/style/components/CustomTypography/CustomTypography.js":"31","/home/adil/Code/FolioX-Frontend/src/components/Select/Select.js":"32","/home/adil/Code/FolioX-Frontend/src/assets/style/components/Select.js":"33"},{"size":525,"mtime":1614777732606,"results":"34","hashOfConfig":"35"},{"size":361,"mtime":1614777732582,"results":"36","hashOfConfig":"35"},{"size":325,"mtime":1614778564800,"results":"37","hashOfConfig":"35"},{"size":1197,"mtime":1614778542816,"results":"38","hashOfConfig":"35"},{"size":626,"mtime":1614777732606,"results":"39","hashOfConfig":"35"},{"size":1235,"mtime":1614777732606,"results":"40","hashOfConfig":"35"},{"size":953,"mtime":1614778429257,"results":"41","hashOfConfig":"35"},{"size":1557,"mtime":1614778447489,"results":"42","hashOfConfig":"35"},{"size":1782,"mtime":1614778482717,"results":"43","hashOfConfig":"35"},{"size":4928,"mtime":1614778506088,"results":"44","hashOfConfig":"35"},{"size":2381,"mtime":1614777732606,"results":"45","hashOfConfig":"35"},{"size":1857,"mtime":1614777732606,"results":"46","hashOfConfig":"35"},{"size":1515,"mtime":1614777732606,"results":"47","hashOfConfig":"35"},{"size":1848,"mtime":1614777732606,"results":"48","hashOfConfig":"35"},{"size":1939,"mtime":1614777732606,"results":"49","hashOfConfig":"35"},{"size":262,"mtime":1614777732606,"results":"50","hashOfConfig":"35"},{"size":8520,"mtime":1614777732606,"results":"51","hashOfConfig":"35"},{"size":1698,"mtime":1614777732606,"results":"52","hashOfConfig":"35"},{"size":5013,"mtime":1614777732606,"results":"53","hashOfConfig":"35"},{"size":1416,"mtime":1614777732606,"results":"54","hashOfConfig":"35"},{"size":1411,"mtime":1614777732602,"results":"55","hashOfConfig":"35"},{"size":542,"mtime":1614777732602,"results":"56","hashOfConfig":"35"},{"size":889,"mtime":1614777732602,"results":"57","hashOfConfig":"35"},{"size":1082,"mtime":1614777732602,"results":"58","hashOfConfig":"35"},{"size":549,"mtime":1614777732602,"results":"59","hashOfConfig":"35"},{"size":670,"mtime":1614777732602,"results":"60","hashOfConfig":"35"},{"size":1722,"mtime":1614777732606,"results":"61","hashOfConfig":"35"},{"size":745,"mtime":1614777732602,"results":"62","hashOfConfig":"35"},{"size":750,"mtime":1614777732602,"results":"63","hashOfConfig":"35"},{"size":551,"mtime":1614777732602,"results":"64","hashOfConfig":"35"},{"size":240,"mtime":1614777732602,"results":"65","hashOfConfig":"35"},{"size":546,"mtime":1614777732606,"results":"66","hashOfConfig":"35"},{"size":765,"mtime":1614777732602,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"t2st12",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/home/adil/Code/FolioX-Frontend/src/index.js",[],["143","144"],"/home/adil/Code/FolioX-Frontend/src/App.js",[],"/home/adil/Code/FolioX-Frontend/src/components/LoadingSpinner/LoadingSpinner.js",[],"/home/adil/Code/FolioX-Frontend/src/routes.js",[],"/home/adil/Code/FolioX-Frontend/src/store/index.js",[],"/home/adil/Code/FolioX-Frontend/src/components/Notification/ErrorNotification.js",[],"/home/adil/Code/FolioX-Frontend/src/store/message/index.js",[],"/home/adil/Code/FolioX-Frontend/src/store/college/index.js",["145"],"<<<<<<< HEAD\nimport axios from \"axios\";\r\nimport message from \"store/message\";\r\n//constant\r\nconst COLLEGE_LIST_REQUEST = \"COLLEGE_LIST_REQUEST\";\r\nconst COLLEGE_LIST_SUCCESS = \"COLLEGE_LIST_SUCCESS\";\r\nconst COLLEGE_LIST_FAILED = \"COLLGE_LIST_FAILED\";\r\n\r\n//action creater\r\n\r\nconst collgeList = {\r\n  request: () => {\r\n    return {\r\n      type: COLLEGE_LIST_REQUEST,\r\n    };\r\n  },\r\n\r\n  succes: (colleges) => {\r\n    return {\r\n      type: COLLEGE_LIST_SUCCESS,\r\n      payload: colleges,\r\n    };\r\n  },\r\n\r\n  failed: () => {\r\n    return {\r\n      type: COLLEGE_LIST_FAILED,\r\n    };\r\n  },\r\n\r\n  fetch: () => {\r\n    return async (dispatch) => {\r\n      dispatch(collgeList.request());\r\n      try {\r\n        const { data } = await axios.get(\r\n          \"http://foliox.deepinferx.in/web/api/gen/colleges\"\r\n        );\r\n        console.log(data);\r\n        dispatch(collgeList.succes(data.colleges));\r\n      } catch (error) {\r\n        dispatch(message.error(error.message));\r\n        dispatch(collgeList.failed());\r\n      }\r\n    };\r\n  },\r\n};\r\n\r\n//reducer\r\n\r\nconst initialCollegeState = {\r\n  isLoading: false,\r\n  list: [],\r\n};\r\n\r\nconst collegeReducer = (state = initialCollegeState, action) => {\r\n  switch (action.type) {\r\n    case COLLEGE_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case COLLEGE_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        list: action.payload,\r\n      };\r\n\r\n    case COLLEGE_LIST_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default collegeReducer;\r\nexport { collgeList };\r\n=======\nimport axios from \"axios\";\nimport  {message} from \"store/message\";\n//constant\nconst COLLEGE_LIST_REQUEST = \"COLLEGE_LIST_REQUEST\";\nconst COLLEGE_LIST_SUCCESS = \"COLLEGE_LIST_SUCCESS\";\nconst COLLEGE_LIST_FAILED = \"COLLGE_LIST_FAILED\";\n\n//action creater\n\nconst collgeList = {\n  request: () => {\n    return {\n      type: COLLEGE_LIST_REQUEST,\n    };\n  },\n\n  succes: (colleges) => {\n    return {\n      type: COLLEGE_LIST_SUCCESS,\n      payload: colleges,\n    };\n  },\n\n  failed: () => {\n    return {\n      type: COLLEGE_LIST_FAILED,\n    };\n  },\n\n  fetch: () => {\n    return async (dispatch) => {\n      dispatch(collgeList.request());\n      try {\n        const { data } = await axios.get(\n          \"http://foliox.deepinferx.in/web/api/gen/colleges\"\n        );\n        console.log(data);\n        dispatch(collgeList.succes(data.colleges));\n      } catch (error) {\n        dispatch(message.error(error.message));\n        dispatch(collgeList.failed());\n      }\n    };\n  },\n};\n\n//reducer\n\nconst initialCollegeState = {\n  isLoading: false,\n  list: [],\n};\n\nconst collegeReducer = (state = initialCollegeState, action) => {\n  switch (action.type) {\n    case COLLEGE_LIST_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case COLLEGE_LIST_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        list: action.payload,\n      };\n\n    case COLLEGE_LIST_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default collegeReducer;\nexport { collgeList };\n>>>>>>> 77a5ae5fd88813ece8291b74064a68d97705abdf\n","/home/adil/Code/FolioX-Frontend/src/store/auth/index.js",["146"],"<<<<<<< HEAD\nimport axios from \"axios\";\r\nimport * as message from \"store/message\";\r\n//constant\r\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nconst LOGIN_FAILED = \"LOGIN_FAILED\";\r\n\r\n//action creater\r\n\r\nconst loginRequest = () => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n  };\r\n};\r\n\r\nconst loginFailed = () => {\r\n  return {\r\n    type: LOGIN_FAILED,\r\n  };\r\n};\r\n\r\nconst loginSuccess = (user) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nconst login = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch(loginRequest());\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"http://foliox.deepinferx.in/web/api/admin/login\",\r\n        user\r\n      );\r\n\r\n      //success\r\n      if (data.success === 1) {\r\n        delete data.success;\r\n        dispatch(loginSuccess(data));\r\n      }\r\n\r\n      //login failed\r\n      else {\r\n        delete data.success;\r\n        throw data;\r\n      }\r\n    } catch (error) {\r\n      dispatch(loginFailed());\r\n      dispatch(message.messageError(error.message));\r\n    }\r\n  };\r\n};\r\n\r\nconst register = (newUser) => {};\r\n\r\nconst logout = () => {};\r\n\r\n//Reducer\r\n\r\nconst initialAuthState = {\r\n  isLoading: false,\r\n  user: {},\r\n};\r\n\r\nconst authReducer = (state = initialAuthState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        user: action.payload,\r\n      };\r\n\r\n    case LOGIN_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { login, loginSuccess, loginRequest, loginFailed, register, logout };\r\n\r\nexport default authReducer;\r\n=======\nimport axios from \"axios\";\nimport {message} from \"store/message\";\n//constant\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nconst LOGIN_FAILED = \"LOGIN_FAILED\";\n\n//action creater\n\n\n  const login =  (user) => {\n    return async (dispatch) => {\n      dispatch({\n        type: LOGIN_REQUEST\n      });\n      try {\n        const { data } = await axios.post(\n          \"http://foliox.deepinferx.in/web/api/admin/login\",\n          user\n        );\n        //success\n        if (data.success === 1) {\n          delete data.success\n          dispatch({type: LOGIN_SUCCESS, payload: data});\n          \n        }\n        //failed\n        if(data.success === 0){\n          throw  (data.message)          \n        }\n      } catch (error) {\n        console.log(error)\n        dispatch({type: LOGIN_FAILED});\n        dispatch(message.error(error))\n      }\n    };\n  };\n\n  // cosnt logout = () => {}\n\n\n\nconst register = (newUser) => {};\n\n\n\n//Reducer\n\nconst initialAuthState = {\n  isLoading: false,\n  user: {},\n};\n\nconst authReducer = (state = initialAuthState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        user: action.payload,\n      };\n\n    case LOGIN_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { login, register };\n\nexport default authReducer;\n>>>>>>> 77a5ae5fd88813ece8291b74064a68d97705abdf\n","/home/adil/Code/FolioX-Frontend/src/pages/Admin/AdminLogin/AdminLogin.js",["147"],"<<<<<<< HEAD\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n//@material-ui core components\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\n\r\nimport Typography from \"components/CustomTypography/Typography\";\r\nimport CustomInput from \"components/CustomInput/CustomInput\";\r\nimport CustomButton from \"components/CustomButton/CustomButton\";\r\nimport Navbar from \"components/Navbar/Navbar\";\r\nimport Select from \"components/Select/Select\";\r\nimport LoadingSpinner from \"components/LoadingSpinner/LoadingSpinner\";\r\n\r\nimport fx from \"assets/logo/fx.png\";\r\nimport image from \"assets/img/admin-login-image.svg\";\r\n\r\n//action creater\r\nimport * as auth from \"store/auth\";\r\nimport { collgeList } from \"store/college\";\r\n\r\nconst circle = <span>&#9675;&nbsp;</span>;\r\n\r\n//style\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"100vh\",\r\n  },\r\n  form: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function AdminLogin(props) {\r\n  console.log(\"Admin Login page rendered\");\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const collegeList = useSelector((store) => store.college.list);\r\n  const isLoading = useSelector((store) => store.college.isLoading);\r\n\r\n  const [loginCredentials, setLoginCredentials] = useState({\r\n    email: undefined,\r\n    password: undefined,\r\n    college_id: undefined,\r\n  });\r\n\r\n  const setSelectedCollege = (e) => {\r\n    console.log(e.target.value);\r\n    setLoginCredentials({ ...loginCredentials, college_id: e.target.value });\r\n  };\r\n\r\n  //Dispatch action  to fetch list of registered colleges\r\n  useEffect(() => {\r\n    dispatch(collgeList.fetch());\r\n  }, []);\r\n\r\n  //Form submit handler\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"college_id\", loginCredentials.college_id);\r\n    formData.append(\"email\", loginCredentials.email);\r\n    formData.append(\"password\", loginCredentials.password);\r\n    dispatch(auth.login(formData));\r\n  };\r\n\r\n  const user = useSelector((store) => store.auth.user?.auth_token);\r\n  const navigate = useNavigate();\r\n\r\n  if (user) {\r\n    navigate(\"../dashboard\");\r\n  }\r\n  return (\r\n    <>\r\n      <LoadingSpinner open={isLoading} />\r\n      <form onSubmit={submitHandler}>\r\n        <Grid className={classes.root} container direction=\"column\">\r\n          <Grid item style={{ height: \"100px\" }}>\r\n            <Navbar logo={fx} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"h4\"\r\n              align=\"center\"\r\n              component=\"p\"\r\n              fontWeight=\"800\"\r\n            >\r\n              Please enter your credentials\r\n            </Typography>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            justify=\"space-around\"\r\n            alignItems=\"center\"\r\n            className={classes.form}\r\n            direction=\"row\"\r\n          >\r\n            <Grid item xs={10} sm={4}>\r\n              <Select\r\n                background=\"brown\"\r\n                value={loginCredentials.college_id}\r\n                changeHandler={setSelectedCollege}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected hidden>\r\n                  Select college\r\n                </option>\r\n                {collegeList.map((college) => (\r\n                  <option key={college.id} value={college.id}>\r\n                    {college.college_name}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n              <CustomInput\r\n                label=\"Email\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                required\r\n                value={loginCredentials.email || \"\"}\r\n                onChange={(e) =>\r\n                  setLoginCredentials({\r\n                    ...loginCredentials,\r\n                    email: e.target.value,\r\n                  })\r\n                }\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"Password\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                required\r\n                type=\"password\"\r\n                value={loginCredentials.password || \"\"}\r\n                onChange={(e) =>\r\n                  setLoginCredentials({\r\n                    ...loginCredentials,\r\n                    password: e.target.value,\r\n                  })\r\n                }\r\n              ></CustomInput>\r\n              <CustomButton\r\n                text={\"Forgot?\"}\r\n                logo={circle}\r\n                to={\"/get-started/\"}\r\n                background=\"white\"\r\n                border=\"borderGray\"\r\n              />\r\n              <CustomButton\r\n                type=\"submit\"\r\n                text={\"Continue\"}\r\n                background=\"brown\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <img src={image} width=\"300\" alt=\"admin login\" />\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n=======\nimport React, { useEffect, useContext } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Navigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//@material-ui core components\nimport { Grid, makeStyles } from \"@material-ui/core\";\n\nimport Typography from \"components/CustomTypography/Typography\";\nimport CustomInput from \"components/CustomInput/CustomInput\";\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport Navbar from \"components/Navbar/Navbar\";\nimport Select from \"components/Select/Select\";\nimport { adminContext } from \"pages/Admin/AdminContext\";\nimport LoadingSpinner from \"components/LoadingSpinner/LoadingSpinner\";\n\nimport fx from \"assets/logo/fx.png\";\nimport image from \"assets/img/admin-login-image.svg\";\n\n//action creater\nimport * as auth from \"store/auth\";\nimport { collgeList } from \"store/college\";\n\nconst circle = <span>&#9675;&nbsp;</span>;\n\n\n\n//style\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n  },\n  form: {\n    flexGrow: 1,\n  },\n}));\n\n\n\nexport default function Landing() {\n  const classes = useStyle();\n  const dispatch = useDispatch();\n\n  const auth_token = useSelector(store => store.auth.user.auth_token)\n  const collegeList = useSelector((store) => store.college.list);\n  const isLoading = useSelector((store) => store.college.isLoading || store.auth.isLoading);\n  const message = useSelector(store => store.message)\n\n  const [loginCredentials, setLoginCredentials] = useState({\n    email: \"\",\n    password: \"\",\n    college_id: \"\",\n  });\n\n\n\n  const setSelectedCollege = (e) => {\n    setLoginCredentials({...loginCredentials, college_id: e.target.value});\n  };\n\n  //Toast Notification for showing error to users\n  const errorNotification = () =>\n    toast.error(message.error, {\n      position: \"bottom-center\",\n      autoClose: false,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n    \n  const { admin, setAdmin } = useContext(adminContext);\n\n\n\n  //Dispatch action  to fetch list of registered colleges\n  useEffect(() => {\n    dispatch(collgeList.fetch());\n  }, []);\n\n  //Error Notification handler\n  useEffect(() => {\n    message.error.length > 0 && errorNotification();\n  }, [message]);\n\n  //Form submit handler\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"college_id\", loginCredentials.college_id);\n    formData.append(\"email\", loginCredentials.email);\n    formData.append(\"password\", loginCredentials.password);\n\n    dispatch(auth.login(formData))\n\n    //reset local state\n    setLoginCredentials({\n      email:\"\",\n      password:\"\",\n      college_id:\"\"\n    })\n    \n  };\n\n  \n\n  // const Navigate = useNavigate();\n  if (auth_token) {\n    return <Navigate to=\"/admin/dashboard\" replace />;\n  }\n  return (\n    <>\n      <LoadingSpinner open={ isLoading } />\n      <ToastContainer\n          position=\"bottom-center\"\n          autoClose={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n        />\n      <form onSubmit={submitHandler}>\n        \n        <Grid className={classes.root} container direction=\"column\">\n          <Grid item style={{ height: \"100px\" }}>\n            <Navbar logo={fx} />\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h4\"\n              align=\"center\"\n              component=\"p\"\n              fontWeight=\"800\"\n            >\n              Please enter your credentials\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            container\n            justify=\"space-around\"\n            alignItems=\"center\"\n            className={classes.form}\n            direction=\"row\"\n          >\n            <Grid item xs={10} sm={4}>\n              <Select\n                background=\"brown\"\n                value={loginCredentials.college_id}\n                changeHandler={setSelectedCollege}\n                required\n              >\n                <option value=\"\" disabled  hidden>\n                  Select college\n                </option>\n                {collegeList.map((college) => (\n                  <option key={college.id} value={college.id}>\n                    {college.college_name}\n                  </option>\n                ))}\n              </Select>\n              <CustomInput\n                label=\"Email\"\n                background=\"brown\"\n                fullWidth\n                required\n                value={loginCredentials.email}\n                onChange={(e) =>\n                  setLoginCredentials({\n                    ...loginCredentials,\n                    email: e.target.value,\n                  })\n                }\n              ></CustomInput>\n              <CustomInput\n                label=\"Password\"\n                background=\"brown\"\n                fullWidth\n                required\n                type=\"password\"\n                value={loginCredentials.password}\n                onChange={(e) =>\n                  setLoginCredentials({\n                    ...loginCredentials,\n                    password: e.target.value,\n                  })\n                }\n              ></CustomInput>\n              <CustomButton\n                text={\"Forgot?\"}\n                logo={circle}\n                to={\"/get-started/\"}\n                background=\"white\"\n                border=\"borderGray\"\n              />\n              <CustomButton\n                type=\"submit\"\n                text={\"Continue\"}\n                background=\"brown\"\n              />\n            </Grid>\n          </Grid>\n          <Grid item>\n            <img src={image} width=\"300\" alt=\"admin login\" />\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n>>>>>>> 77a5ae5fd88813ece8291b74064a68d97705abdf\n","/home/adil/Code/FolioX-Frontend/src/pages/Landing/Landing.js",[],"/home/adil/Code/FolioX-Frontend/src/pages/Admin/AdminOption/AdminOption.js",[],"/home/adil/Code/FolioX-Frontend/src/pages/Admin/AdminRegister/RegistrationOverlay.js",[],"/home/adil/Code/FolioX-Frontend/src/pages/GetStarted/GetStarted.js",[],"/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/DashboardLayout.js",["148","149","150"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport NavBar from \"./NavBar\";\r\nimport TopBar from \"./TopBar\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n    width: \"100%\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flex: \"1 1 auto\",\r\n    overflow: \"hidden\",\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: 256,\r\n    },\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n    flex: \"1 1 auto\",\r\n  },\r\n  content: {\r\n    flex: \"1 1 auto\",\r\n    height: \"100%\",\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n\r\nconst DashboardLayout = (props) => {\r\n  const classes = useStyles();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n  // const { groups, setGroups } = useContext(adminContext);\r\n  console.log(props);\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(\r\n  //       \"http://foliox.deepinferx.in/web/api/admin/students/groups/get?admin=15\"\r\n  //     )\r\n  //     .then((res) => {\r\n  //       console.log(res.data);\r\n  //       const { success } = res.data;\r\n  //       if (success === 0) {\r\n  //         setGroups(res.data.groups);\r\n  //         console.log(res.data.groups);\r\n  //       }\r\n  //     });\r\n  // }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/view/Home.js",["151"],"import React, { useContext } from \"react\";\r\n// import { adminContext } from \"pages/Admin/AdminContext\";\r\n\r\nexport default function Home() {\r\n  // const { groups } = useContext(adminContext);\r\n  return (\r\n    <div>\r\n      <h1>Home Page</h1>\r\n    </div>\r\n  );\r\n}\r\n","/home/adil/Code/FolioX-Frontend/src/pages/Admin/AdminRegister/AdminRegister.js",["152","153"],"import { Grid } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport Navbar from \"components/Navbar/Navbar\";\r\nimport fx from \"assets/logo/fx.png\";\r\nimport Typography from \"components/CustomTypography/Typography\";\r\nimport useStyles from \"assets/style/pages/AdminRegister/AdminRegister\";\r\nimport CustomInput from \"components/CustomInput/CustomInput\";\r\nimport CustomButton from \"components/CustomButton/CustomButton\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nconst circle = <span>&#9675;&nbsp;</span>;\r\n\r\nexport default function Landing(props) {\r\n  //States for all the input field\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mobileNumber, setMobileNumber] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [collegeName, setCollegeName] = useState(\"\");\r\n  const [collegeLinkedin, setCollegeLinkedin] = useState(\"\");\r\n  const [collegeAddress, setCollegeAddress] = useState(\"\");\r\n\r\n  /**\r\n   * Function for handling change in input field\r\n   * @param event\r\n   *\r\n   */\r\n\r\n  const handelChange = ({ target: { name: type, value } }) => {\r\n    switch (type) {\r\n      case \"Name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"Email\":\r\n        setEmail(value);\r\n        break;\r\n\r\n      case \"MobileNumber\":\r\n        setMobileNumber(value);\r\n        break;\r\n\r\n      case \"Password\":\r\n        setPassword(value);\r\n        break;\r\n\r\n      case \"ConfirmPassword\":\r\n        setConfirmPassword(value);\r\n        break;\r\n\r\n      case \"CollegeName\":\r\n        setCollegeName(value);\r\n        break;\r\n\r\n      case \"CollegeLinkedin\":\r\n        setCollegeLinkedin(value);\r\n        break;\r\n\r\n      case \"CollegeAddress\":\r\n        setCollegeAddress(value);\r\n\r\n      default:\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Function to handler Register submit\r\n   * @param event\r\n   */\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setName((name) => name.trim());\r\n    setEmail((email) => email.trim());\r\n    setMobileNumber((mobileNumber) => mobileNumber.trim());\r\n    setPassword((password) => password.trim());\r\n    setConfirmPassword((confirmPassword) => confirmPassword.trim());\r\n    setCollegeName((collegeName) => collegeName.trim());\r\n    setCollegeLinkedin((collegeLinkedin) => collegeLinkedin.trim());\r\n    setCollegeAddress((collegeAddress) => collegeAddress.trim());\r\n\r\n    //Error notification when password and confirm password didn't match\r\n    // if (password !== confirmPassword) {\r\n    //   setError({ message: \"Password didn't match\" });\r\n\r\n    //   return;\r\n    // }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"email\", email);\r\n    formData.append(\"mobile\", mobileNumber);\r\n    formData.append(\"password\", password);\r\n    formData.append(\"college_name\", collegeName);\r\n    formData.append(\"college_linked_in\", collegeLinkedin);\r\n    formData.append(\"college_add\", collegeAddress);\r\n    axios\r\n      .post(\"http://foliox.deepinferx.in/web/api/admin/register\", formData)\r\n      .then((res) => {\r\n        const { success, message } = res.data;\r\n\r\n        //if success = 0 something wrong\r\n        if (success === 0) {\r\n          setTimeout(() => {\r\n            // setError({ message });\r\n          }, 100);\r\n        }\r\n\r\n        //if success = 1 Registeration successfull\r\n        if (success === 1) {\r\n          props.history.push(\"/admin/registration-confirmation-overlay\");\r\n        }\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className={classes.root}>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        style={{\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        <Grid item className={classes.top}></Grid>\r\n        <Grid className={classes.main} item container>\r\n          <Grid item xs={12} style={{ height: \"100px\" }}>\r\n            <Navbar logo={fx} />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.title}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              align=\"center\"\r\n              component=\"p\"\r\n              fontWeight=\"800\"\r\n            >\r\n              Registration From\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            direction=\"row\"\r\n            justify=\"space-around\"\r\n            style={{ flexGrow: \"1\" }}\r\n            container\r\n          >\r\n            <Grid item className={classes.mainLeft} xs={4}>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                align=\"center\"\r\n                component=\"p\"\r\n                fontWeight=\"800\"\r\n                gutterBottom\r\n              >\r\n                Personal Details\r\n              </Typography>\r\n\r\n              <CustomInput\r\n                label=\"Name*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={name}\r\n                name=\"Name\"\r\n                onChange={handelChange}\r\n                autoFocus\r\n                required\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"E-mail*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={email}\r\n                name=\"Email\"\r\n                onChange={handelChange}\r\n                required\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"Mobile Number*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={mobileNumber}\r\n                name=\"MobileNumber\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"Password*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={password}\r\n                type=\"password\"\r\n                name=\"Password\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"Confirm Password*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={confirmPassword}\r\n                name=\"ConfirmPassword\"\r\n                type=\"password\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                align=\"center\"\r\n                component=\"p\"\r\n                fontWeight=\"800\"\r\n                gutterBottom\r\n              >\r\n                College Details\r\n              </Typography>\r\n              <CustomInput\r\n                background=\"brown\"\r\n                label=\"College Name *\"\r\n                fullWidth\r\n                value={collegeName}\r\n                name=\"CollegeName\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"College LinkedIn Profile\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={collegeLinkedin}\r\n                name=\"CollegeLinkedin\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomInput\r\n                background=\"brown\"\r\n                label=\"College Address *\"\r\n                fullWidth\r\n                multiline\r\n                rows=\"5\"\r\n                cols=\"30\"\r\n                value={collegeAddress}\r\n                name=\"CollegeAddress\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomButton\r\n                text={\"Login\"}\r\n                logo={circle}\r\n                to={\"/admin/login\"}\r\n                background=\"white\"\r\n                border=\"borderGray\"\r\n              />\r\n              <CustomButton\r\n                type=\"submit\"\r\n                text={\"Register\"}\r\n                background=\"brown\"\r\n              />\r\n            </Grid>\r\n            <Grid item container justify=\"center\" alignItems=\"center\" xs={12}>\r\n              <Typography variant=\"subtitle2\" align=\"center\">\r\n                * The (*) marked fields are required. Read our policy to know\r\n                how we use your data.\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/TopBar.js",[],"/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/NavBar/index.js",["154","155","156","157","158","159","160","161"],"import React, { useEffect, useContext } from \"react\";\r\nimport { Link as RouterLink, Navigate, useLocation } from \"react-router-dom\";\r\n// import { adminContext } from \"pages/Admin/AdminContext\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  ListItemLink,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles,\r\n  ListItem,\r\n  ListItemText,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  Settings as SettingsIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  Users as UsersIcon,\r\n} from \"react-feather\";\r\nimport NavItem from \"./NavItem\";\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\r\n\r\nconst items = [\r\n  {\r\n    href: \"/admin/dashboard\",\r\n    icon: BarChartIcon,\r\n    title: \"Dashboard\",\r\n  },\r\n  {\r\n    href: \"/admin/student-group\",\r\n    icon: UsersIcon,\r\n    title: \"Student Groups\",\r\n  },\r\n\r\n  {\r\n    href: \"/app/account\",\r\n    icon: UserIcon,\r\n    title: \"Account\",\r\n  },\r\n  {\r\n    href: \"/app/settings\",\r\n    icon: SettingsIcon,\r\n    title: \"Settings\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256,\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: \"calc(100% - 64px)\",\r\n  },\r\n  avatar: {\r\n    cursor: \"pointer\",\r\n    width: 64,\r\n    height: 64,\r\n  },\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  // For handling student group nested list\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  // const { groups } = useContext(adminContext);\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  // const { admin } = useContext(adminContext);\r\n  // if (!admin) {\r\n  //   return <Navigate to=\"/admin\" />;\r\n  // }\r\n  //Admin details\r\n  // const user = admin.user;\r\n\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          // src={user.avatar}\r\n          to=\"/app/account\"\r\n        />\r\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n          {/* {user.name} */}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {/* {user.email} */}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {/* Plan Expires On - <b>{user.plan_expire_date} </b> */}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map((item) => {\r\n            if (item.title === \"Student Groups\") {\r\n              return (\r\n                <List\r\n                  component=\"nav\"\r\n                  aria-labelledby=\"nested-list-subheader\"\r\n                  className={classes.root}\r\n                >\r\n                  <ListItem button onClick={handleClick}>\r\n                    <ListItemText primary=\"Student Groups\" />\r\n                    {open ? <ExpandLess /> : <ExpandMore />}\r\n                  </ListItem>\r\n                  <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                      {/* {groups.map((group) => (\r\n                        <NavItem href={group.id}>\r\n                          <ListItem button className={classes.nested}>\r\n                            <ListItemText primary={group.group_name} />\r\n                          </ListItem>\r\n                        </NavItem>\r\n                      ))} */}\r\n                    </List>\r\n                  </Collapse>\r\n                </List>\r\n              );\r\n            } else {\r\n              return (\r\n                <NavItem\r\n                  href={item.href}\r\n                  key={item.title}\r\n                  title={item.title}\r\n                  icon={item.icon}\r\n                />\r\n              );\r\n            }\r\n          })}\r\n        </List>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool,\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false,\r\n};\r\n\r\nexport default NavBar;\r\n","/home/adil/Code/FolioX-Frontend/src/components/Navbar/Navbar.js",[],"/home/adil/Code/FolioX-Frontend/src/components/Card/Card.js",[],"/home/adil/Code/FolioX-Frontend/src/components/CustomTypography/Typography.js",[],"/home/adil/Code/FolioX-Frontend/src/components/CustomInput/CustomInput.js",[],"/home/adil/Code/FolioX-Frontend/src/components/CustomButton/CustomButton.js",[],"/home/adil/Code/FolioX-Frontend/src/assets/style/pages/AdminRegister/RegistrationOverlay.js",[],"/home/adil/Code/FolioX-Frontend/src/assets/style/pages/AdminRegister/AdminRegister.js",[],"/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/NavBar/NavItem.js",[],["162","163"],"/home/adil/Code/FolioX-Frontend/src/assets/style/components/CustomInput/CustomInput.js",[],"/home/adil/Code/FolioX-Frontend/src/assets/style/components/CustomButton/CustomeButton.js",[],"/home/adil/Code/FolioX-Frontend/src/assets/style/components/Card/Card.js",[],"/home/adil/Code/FolioX-Frontend/src/assets/style/components/CustomTypography/CustomTypography.js",[],"/home/adil/Code/FolioX-Frontend/src/components/Select/Select.js",[],"/home/adil/Code/FolioX-Frontend/src/assets/style/components/Select.js",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":null,"fatal":true,"severity":2,"message":"168","line":1,"column":2},{"ruleId":null,"fatal":true,"severity":2,"message":"169","line":1,"column":2},{"ruleId":null,"fatal":true,"severity":2,"message":"170","line":1,"column":2},{"ruleId":"171","severity":1,"message":"172","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"171","severity":1,"message":"175","line":1,"column":38,"nodeType":"173","messageId":"174","endLine":1,"endColumn":48},{"ruleId":"171","severity":1,"message":"176","line":6,"column":8,"nodeType":"173","messageId":"174","endLine":6,"endColumn":13},{"ruleId":"171","severity":1,"message":"175","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":27},{"ruleId":"177","severity":1,"message":"178","line":63,"column":7,"nodeType":"179","messageId":"180","endLine":63,"endColumn":15},{"ruleId":"171","severity":1,"message":"181","line":101,"column":26,"nodeType":"173","messageId":"174","endLine":101,"endColumn":33},{"ruleId":"171","severity":1,"message":"175","line":1,"column":28,"nodeType":"173","messageId":"174","endLine":1,"endColumn":38},{"ruleId":"171","severity":1,"message":"182","line":2,"column":30,"nodeType":"173","messageId":"174","endLine":2,"endColumn":38},{"ruleId":"171","severity":1,"message":"183","line":8,"column":3,"nodeType":"173","messageId":"174","endLine":8,"endColumn":15},{"ruleId":"171","severity":1,"message":"184","line":20,"column":18,"nodeType":"173","messageId":"174","endLine":20,"endColumn":33},{"ruleId":"171","severity":1,"message":"185","line":22,"column":11,"nodeType":"173","messageId":"174","endLine":22,"endColumn":19},{"ruleId":"171","severity":1,"message":"186","line":24,"column":18,"nodeType":"173","messageId":"174","endLine":24,"endColumn":33},{"ruleId":"171","severity":1,"message":"187","line":26,"column":15,"nodeType":"173","messageId":"174","endLine":26,"endColumn":27},{"ruleId":"188","severity":1,"message":"189","line":88,"column":6,"nodeType":"190","endLine":88,"endColumn":25,"suggestions":"191"},{"ruleId":"164","replacedBy":"192"},{"ruleId":"166","replacedBy":"193"},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"Parsing error: Unexpected token\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 | \u001b[39m\u001b[36mimport\u001b[39m axios from \u001b[32m\"axios\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[36mimport\u001b[39m message from \u001b[32m\"store/message\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[90m//constant\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 | \u001b[39m\u001b[36mimport\u001b[39m axios from \u001b[32m\"axios\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33m*\u001b[39m as message from \u001b[32m\"store/message\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[90m//constant\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m,\u001b[39m { useEffect } from \u001b[32m\"react\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[36mimport\u001b[39m { useState } from \u001b[32m\"react\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[36mimport\u001b[39m { useNavigate } from \u001b[32m\"react-router-dom\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'axios' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'message' is assigned a value but never used.","'Navigate' is defined but never used.","'ListItemLink' is defined but never used.","'AlertCircleIcon' is defined but never used.","'LockIcon' is defined but never used.","'ShoppingBagIcon' is defined but never used.","'UserPlusIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onMobileClose' and 'openMobile'. Either include them or remove the dependency array. If 'onMobileClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["196"],["194"],["195"],"no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},"Update the dependencies array to be: [location.pathname, onMobileClose, openMobile]",{"range":"199","text":"200"},[1845,1864],"[location.pathname, onMobileClose, openMobile]"]