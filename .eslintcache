[{"/home/adil/Code/FolioX-Frontend/src/index.js":"1","/home/adil/Code/FolioX-Frontend/src/App.js":"2","/home/adil/Code/FolioX-Frontend/src/components/LoadingSpinner/LoadingSpinner.js":"3","/home/adil/Code/FolioX-Frontend/src/routes.js":"4","/home/adil/Code/FolioX-Frontend/src/store/index.js":"5","/home/adil/Code/FolioX-Frontend/src/components/Notification/ErrorNotification.js":"6","/home/adil/Code/FolioX-Frontend/src/store/message/index.js":"7","/home/adil/Code/FolioX-Frontend/src/store/college/index.js":"8","/home/adil/Code/FolioX-Frontend/src/store/auth/index.js":"9","/home/adil/Code/FolioX-Frontend/src/pages/Admin/AdminLogin/AdminLogin.js":"10","/home/adil/Code/FolioX-Frontend/src/pages/Landing/Landing.js":"11","/home/adil/Code/FolioX-Frontend/src/pages/Admin/AdminOption/AdminOption.js":"12","/home/adil/Code/FolioX-Frontend/src/pages/Admin/AdminRegister/RegistrationOverlay.js":"13","/home/adil/Code/FolioX-Frontend/src/pages/GetStarted/GetStarted.js":"14","/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/DashboardLayout.js":"15","/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/view/Home.js":"16","/home/adil/Code/FolioX-Frontend/src/pages/Admin/AdminRegister/AdminRegister.js":"17","/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/NavBar/index.js":"18","/home/adil/Code/FolioX-Frontend/src/components/Navbar/Navbar.js":"19","/home/adil/Code/FolioX-Frontend/src/components/Card/Card.js":"20","/home/adil/Code/FolioX-Frontend/src/components/CustomTypography/Typography.js":"21","/home/adil/Code/FolioX-Frontend/src/components/CustomInput/CustomInput.js":"22","/home/adil/Code/FolioX-Frontend/src/components/CustomButton/CustomButton.js":"23","/home/adil/Code/FolioX-Frontend/src/assets/style/pages/AdminRegister/RegistrationOverlay.js":"24","/home/adil/Code/FolioX-Frontend/src/assets/style/pages/AdminRegister/AdminRegister.js":"25","/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/NavBar/NavItem.js":"26","/home/adil/Code/FolioX-Frontend/src/components/Select/Select.js":"27","/home/adil/Code/FolioX-Frontend/src/components/TopBar/TopBar.js":"28","/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/view/Group.js":"29","/home/adil/Code/FolioX-Frontend/src/store/group/index.js":"30","/home/adil/Code/FolioX-Frontend/src/store/isLoading/index.js":"31","/home/adil/Code/FolioX-Frontend/src/components/Modal/index.js":"32"},{"size":590,"mtime":1615547754997,"results":"33","hashOfConfig":"34"},{"size":685,"mtime":1615547798166,"results":"35","hashOfConfig":"34"},{"size":325,"mtime":1614778564800,"results":"36","hashOfConfig":"34"},{"size":1461,"mtime":1615369320720,"results":"37","hashOfConfig":"34"},{"size":1042,"mtime":1615795235435,"results":"38","hashOfConfig":"34"},{"size":1235,"mtime":1614777732606,"results":"39","hashOfConfig":"34"},{"size":951,"mtime":1615636117871,"results":"40","hashOfConfig":"34"},{"size":1577,"mtime":1615636195080,"results":"41","hashOfConfig":"34"},{"size":1751,"mtime":1615792277390,"results":"42","hashOfConfig":"34"},{"size":4776,"mtime":1615636434410,"results":"43","hashOfConfig":"34"},{"size":2381,"mtime":1614777732606,"results":"44","hashOfConfig":"34"},{"size":1857,"mtime":1614777732606,"results":"45","hashOfConfig":"34"},{"size":1515,"mtime":1614777732606,"results":"46","hashOfConfig":"34"},{"size":1848,"mtime":1614777732606,"results":"47","hashOfConfig":"34"},{"size":2142,"mtime":1615799572214,"results":"48","hashOfConfig":"34"},{"size":163,"mtime":1614781724183,"results":"49","hashOfConfig":"34"},{"size":8520,"mtime":1614777732606,"results":"50","hashOfConfig":"34"},{"size":6315,"mtime":1615543433773,"results":"51","hashOfConfig":"34"},{"size":1416,"mtime":1614777732606,"results":"52","hashOfConfig":"34"},{"size":1835,"mtime":1615802515113,"results":"53","hashOfConfig":"34"},{"size":629,"mtime":1615802343283,"results":"54","hashOfConfig":"34"},{"size":1520,"mtime":1615802624889,"results":"55","hashOfConfig":"34"},{"size":1971,"mtime":1615373365334,"results":"56","hashOfConfig":"34"},{"size":549,"mtime":1614777732602,"results":"57","hashOfConfig":"34"},{"size":670,"mtime":1614777732602,"results":"58","hashOfConfig":"34"},{"size":1679,"mtime":1614867947975,"results":"59","hashOfConfig":"34"},{"size":1187,"mtime":1615802424882,"results":"60","hashOfConfig":"34"},{"size":1635,"mtime":1614782204219,"results":"61","hashOfConfig":"34"},{"size":9567,"mtime":1616065794214,"results":"62","hashOfConfig":"34"},{"size":4611,"mtime":1616061043234,"results":"63","hashOfConfig":"34"},{"size":247,"mtime":1615547853407,"results":"64","hashOfConfig":"34"},{"size":1144,"mtime":1615799682183,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"16rpnqv",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/home/adil/Code/FolioX-Frontend/src/index.js",[],["137","138"],"/home/adil/Code/FolioX-Frontend/src/App.js",[],"/home/adil/Code/FolioX-Frontend/src/components/LoadingSpinner/LoadingSpinner.js",[],"/home/adil/Code/FolioX-Frontend/src/routes.js",[],"/home/adil/Code/FolioX-Frontend/src/store/index.js",[],"/home/adil/Code/FolioX-Frontend/src/components/Notification/ErrorNotification.js",[],"/home/adil/Code/FolioX-Frontend/src/store/message/index.js",[],"/home/adil/Code/FolioX-Frontend/src/store/college/index.js",["139","140","141"],"import axios from \"axios\";\nimport { messageClear, messageError, messageSuccess } from \"store/message\";\n\n//constant\nconst COLLEGE_LIST_REQUEST = \"COLLEGE_LIST_REQUEST\";\nconst COLLEGE_LIST_SUCCESS = \"COLLEGE_LIST_SUCCESS\";\nconst COLLEGE_LIST_FAILED = \"COLLGE_LIST_FAILED\";\n\n//action creater\n\nconst collegeListRequested = () => {\n  return {\n    type: COLLEGE_LIST_REQUEST,\n    isLoading: true,\n  };\n};\n\nconst collegeListSuccess = (colleges) => {\n  return {\n    type: COLLEGE_LIST_SUCCESS,\n    payload: colleges,\n    isLoading: false,\n  };\n};\n\nconst collegeListFailed = () => {\n  return {\n    type: COLLEGE_LIST_FAILED,\n    isLoading: false,\n  };\n};\n\nconst loadCollegeList = () => {\n  return async (dispatch) => {\n    dispatch(collegeListRequested());\n\n    try {\n      const { data } = await axios.get(\"/gen/colleges\");\n      if (data.success === 0) {\n        throw { message: \"Something went wrong.\" };\n      }\n      dispatch(collegeListSuccess(data.colleges));\n    } catch (error) {\n      dispatch(messageError(error.message));\n      dispatch(collegeListFailed());\n    }\n  };\n};\n\n//reducer\n\nconst initialCollegeState = {\n  list: [],\n};\n\nconst collegeReducer = (state = initialCollegeState, action) => {\n  switch (action.type) {\n    case COLLEGE_LIST_REQUEST:\n      return {\n        ...state,\n      };\n\n    case COLLEGE_LIST_SUCCESS:\n      return {\n        ...state,\n        list: action.payload,\n      };\n\n    case COLLEGE_LIST_FAILED:\n      return {\n        ...state,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default collegeReducer;\nexport { loadCollegeList };\n","/home/adil/Code/FolioX-Frontend/src/store/auth/index.js",[],"/home/adil/Code/FolioX-Frontend/src/pages/Admin/AdminLogin/AdminLogin.js",["142"],"import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//@material-ui core components\nimport { Grid, makeStyles } from \"@material-ui/core\";\n\nimport Typography from \"components/CustomTypography/Typography\";\nimport CustomInput from \"components/CustomInput/CustomInput\";\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport Navbar from \"components/Navbar/Navbar\";\nimport Select from \"components/Select/Select\";\n\nimport fx from \"assets/logo/fx.png\";\nimport image from \"assets/img/admin-login-image.svg\";\n\n//action creater\nimport { login } from \"store/auth\";\nimport { loadCollegeList } from \"store/college\";\n\nconst circle = <span>&#9675;&nbsp;</span>;\n\n//style\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n  },\n  form: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function AdminLogin(props) {\n  console.log(\"Admin Login page rendered\");\n  const classes = useStyle();\n  const dispatch = useDispatch();\n\n  const collegeList = useSelector((store) => store.college.list);\n\n  const [loginCredentials, setLoginCredentials] = useState({\n    email: undefined,\n    password: undefined,\n    college_id: undefined,\n  });\n\n  const setSelectedCollege = (e) => {\n    console.log(e.target.value);\n    setLoginCredentials({ ...loginCredentials, college_id: e.target.value });\n  };\n\n  //Dispatch action  to fetch list of registered colleges\n  useEffect(() => {\n    dispatch(loadCollegeList());\n  }, []);\n\n  //Form submit handler\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"college_id\", loginCredentials.college_id);\n    formData.append(\"email\", loginCredentials.email);\n    formData.append(\"password\", loginCredentials.password);\n\n    dispatch(login(formData));\n  };\n\n  const user = useSelector((store) => store.auth.user?.auth_token);\n\n  //If login successfull\n  const navigate = useNavigate();\n  if (user) {\n    navigate(\"../dashboard/home\");\n  }\n  return (\n    <>\n      <form onSubmit={submitHandler}>\n        <Grid className={classes.root} container direction=\"column\">\n          <Grid item style={{ height: \"100px\" }}>\n            <Navbar logo={fx} />\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h4\"\n              align=\"center\"\n              component=\"p\"\n              fontWeight=\"800\"\n            >\n              Please enter your credentials\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            container\n            justify=\"space-around\"\n            alignItems=\"center\"\n            className={classes.form}\n            direction=\"row\"\n          >\n            <Grid item xs={10} sm={4}>\n              <Select\n                background=\"brown\"\n                value={loginCredentials.college_id}\n                changeHandler={setSelectedCollege}\n                required\n              >\n                <option value=\"\" disabled selected hidden>\n                  Select college\n                </option>\n                {collegeList.map((college) => (\n                  <option key={college.id} value={college.id}>\n                    {college.college_name}\n                  </option>\n                ))}\n              </Select>\n              <CustomInput\n                label=\"Email\"\n                background=\"brown\"\n                fullWidth\n                required\n                value={loginCredentials.email || \"\"}\n                onChange={(e) =>\n                  setLoginCredentials({\n                    ...loginCredentials,\n                    email: e.target.value,\n                  })\n                }\n              ></CustomInput>\n              <CustomInput\n                label=\"Password\"\n                background=\"brown\"\n                fullWidth\n                required\n                type=\"password\"\n                value={loginCredentials.password || \"\"}\n                onChange={(e) =>\n                  setLoginCredentials({\n                    ...loginCredentials,\n                    password: e.target.value,\n                  })\n                }\n              ></CustomInput>\n              <CustomButton\n                text={\"Forgot?\"}\n                logo={circle}\n                to={\"/get-started/\"}\n                background=\"white\"\n                border=\"borderGray\"\n              />\n              <CustomButton\n                type=\"submit\"\n                text={\"Continue\"}\n                background=\"brown\"\n              />\n            </Grid>\n          </Grid>\n          <Grid item>\n            <img src={image} width=\"300\" alt=\"admin login\" />\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n","/home/adil/Code/FolioX-Frontend/src/pages/Landing/Landing.js",[],"/home/adil/Code/FolioX-Frontend/src/pages/Admin/AdminOption/AdminOption.js",[],"/home/adil/Code/FolioX-Frontend/src/pages/Admin/AdminRegister/RegistrationOverlay.js",[],"/home/adil/Code/FolioX-Frontend/src/pages/GetStarted/GetStarted.js",[],"/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/DashboardLayout.js",["143","144","145"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport NavBar from \"./NavBar\";\r\nimport TopBar from \"components/TopBar/TopBar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadGroups } from \"store/group/index\";\r\nimport LoadingSpinner from \"components/LoadingSpinner/LoadingSpinner\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n    width: \"100%\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flex: \"1 1 auto\",\r\n    overflow: \"hidden\",\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: 300,\r\n    },\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n    flex: \"1 1 auto\",\r\n  },\r\n  content: {\r\n    flex: \"1 1 auto\",\r\n    overflow: \"auto\",\r\n    height: \"93vh\",\r\n    overflow: \"hidden\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      padding: 50,\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      padding: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nconst DashboardLayout = (props) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n  const admin_id = useSelector((store) => store.auth.user.access_key.admin_id);\r\n  const isLoading = useSelector((store) => store.group.isLoading);\r\n\r\n  //Load Groups\r\n  useEffect(() => {\r\n    //For now static admin id\r\n    //Later on change to dynamic id\r\n    dispatch(loadGroups(admin_id));\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LoadingSpinner open={isLoading} />\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/view/Home.js",["146","147"],"import React, { useContext, useEffect } from \"react\";\r\n\r\nexport default function Home() {\r\n\r\n  return (\r\n    <div>\r\n      <h1>Home Page</h1>\r\n    </div>\r\n  );\r\n}\r\n","/home/adil/Code/FolioX-Frontend/src/pages/Admin/AdminRegister/AdminRegister.js",["148","149"],"import { Grid } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport Navbar from \"components/Navbar/Navbar\";\r\nimport fx from \"assets/logo/fx.png\";\r\nimport Typography from \"components/CustomTypography/Typography\";\r\nimport useStyles from \"assets/style/pages/AdminRegister/AdminRegister\";\r\nimport CustomInput from \"components/CustomInput/CustomInput\";\r\nimport CustomButton from \"components/CustomButton/CustomButton\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nconst circle = <span>&#9675;&nbsp;</span>;\r\n\r\nexport default function Landing(props) {\r\n  //States for all the input field\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mobileNumber, setMobileNumber] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [collegeName, setCollegeName] = useState(\"\");\r\n  const [collegeLinkedin, setCollegeLinkedin] = useState(\"\");\r\n  const [collegeAddress, setCollegeAddress] = useState(\"\");\r\n\r\n  /**\r\n   * Function for handling change in input field\r\n   * @param event\r\n   *\r\n   */\r\n\r\n  const handelChange = ({ target: { name: type, value } }) => {\r\n    switch (type) {\r\n      case \"Name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"Email\":\r\n        setEmail(value);\r\n        break;\r\n\r\n      case \"MobileNumber\":\r\n        setMobileNumber(value);\r\n        break;\r\n\r\n      case \"Password\":\r\n        setPassword(value);\r\n        break;\r\n\r\n      case \"ConfirmPassword\":\r\n        setConfirmPassword(value);\r\n        break;\r\n\r\n      case \"CollegeName\":\r\n        setCollegeName(value);\r\n        break;\r\n\r\n      case \"CollegeLinkedin\":\r\n        setCollegeLinkedin(value);\r\n        break;\r\n\r\n      case \"CollegeAddress\":\r\n        setCollegeAddress(value);\r\n\r\n      default:\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Function to handler Register submit\r\n   * @param event\r\n   */\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setName((name) => name.trim());\r\n    setEmail((email) => email.trim());\r\n    setMobileNumber((mobileNumber) => mobileNumber.trim());\r\n    setPassword((password) => password.trim());\r\n    setConfirmPassword((confirmPassword) => confirmPassword.trim());\r\n    setCollegeName((collegeName) => collegeName.trim());\r\n    setCollegeLinkedin((collegeLinkedin) => collegeLinkedin.trim());\r\n    setCollegeAddress((collegeAddress) => collegeAddress.trim());\r\n\r\n    //Error notification when password and confirm password didn't match\r\n    // if (password !== confirmPassword) {\r\n    //   setError({ message: \"Password didn't match\" });\r\n\r\n    //   return;\r\n    // }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"email\", email);\r\n    formData.append(\"mobile\", mobileNumber);\r\n    formData.append(\"password\", password);\r\n    formData.append(\"college_name\", collegeName);\r\n    formData.append(\"college_linked_in\", collegeLinkedin);\r\n    formData.append(\"college_add\", collegeAddress);\r\n    axios\r\n      .post(\"http://foliox.deepinferx.in/web/api/admin/register\", formData)\r\n      .then((res) => {\r\n        const { success, message } = res.data;\r\n\r\n        //if success = 0 something wrong\r\n        if (success === 0) {\r\n          setTimeout(() => {\r\n            // setError({ message });\r\n          }, 100);\r\n        }\r\n\r\n        //if success = 1 Registeration successfull\r\n        if (success === 1) {\r\n          props.history.push(\"/admin/registration-confirmation-overlay\");\r\n        }\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className={classes.root}>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        style={{\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        <Grid item className={classes.top}></Grid>\r\n        <Grid className={classes.main} item container>\r\n          <Grid item xs={12} style={{ height: \"100px\" }}>\r\n            <Navbar logo={fx} />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.title}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              align=\"center\"\r\n              component=\"p\"\r\n              fontWeight=\"800\"\r\n            >\r\n              Registration From\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            direction=\"row\"\r\n            justify=\"space-around\"\r\n            style={{ flexGrow: \"1\" }}\r\n            container\r\n          >\r\n            <Grid item className={classes.mainLeft} xs={4}>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                align=\"center\"\r\n                component=\"p\"\r\n                fontWeight=\"800\"\r\n                gutterBottom\r\n              >\r\n                Personal Details\r\n              </Typography>\r\n\r\n              <CustomInput\r\n                label=\"Name*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={name}\r\n                name=\"Name\"\r\n                onChange={handelChange}\r\n                autoFocus\r\n                required\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"E-mail*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={email}\r\n                name=\"Email\"\r\n                onChange={handelChange}\r\n                required\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"Mobile Number*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={mobileNumber}\r\n                name=\"MobileNumber\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"Password*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={password}\r\n                type=\"password\"\r\n                name=\"Password\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"Confirm Password*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={confirmPassword}\r\n                name=\"ConfirmPassword\"\r\n                type=\"password\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                align=\"center\"\r\n                component=\"p\"\r\n                fontWeight=\"800\"\r\n                gutterBottom\r\n              >\r\n                College Details\r\n              </Typography>\r\n              <CustomInput\r\n                background=\"brown\"\r\n                label=\"College Name *\"\r\n                fullWidth\r\n                value={collegeName}\r\n                name=\"CollegeName\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"College LinkedIn Profile\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={collegeLinkedin}\r\n                name=\"CollegeLinkedin\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomInput\r\n                background=\"brown\"\r\n                label=\"College Address *\"\r\n                fullWidth\r\n                multiline\r\n                rows=\"5\"\r\n                cols=\"30\"\r\n                value={collegeAddress}\r\n                name=\"CollegeAddress\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomButton\r\n                text={\"Login\"}\r\n                logo={circle}\r\n                to={\"/admin/login\"}\r\n                background=\"white\"\r\n                border=\"borderGray\"\r\n              />\r\n              <CustomButton\r\n                type=\"submit\"\r\n                text={\"Register\"}\r\n                background=\"brown\"\r\n              />\r\n            </Grid>\r\n            <Grid item container justify=\"center\" alignItems=\"center\" xs={12}>\r\n              <Typography variant=\"subtitle2\" align=\"center\">\r\n                * The (*) marked fields are required. Read our policy to know\r\n                how we use your data.\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/NavBar/index.js",["150","151","152","153","154","155","156","157","158","159"],"import React, { useEffect, useContext } from \"react\";\r\nimport { Link as RouterLink, Navigate, useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  ListItemLink,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles,\r\n  ListItem,\r\n  ListItemText,\r\n  Collapse,\r\n  ListItemIcon,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  Settings as SettingsIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  Users as UsersIcon,\r\n} from \"react-feather\";\r\nimport NavItem from \"./NavItem\";\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst items = [\r\n  {\r\n    href: \"../home\",\r\n    icon: BarChartIcon,\r\n    title: \"Dashboard\",\r\n  },\r\n  {\r\n    href: \"../student-group\",\r\n    icon: UsersIcon,\r\n    title: \"Student Groups\",\r\n  },\r\n\r\n  {\r\n    href: \"../account\",\r\n    icon: UserIcon,\r\n    title: \"Account\",\r\n  },\r\n  {\r\n    href: \"../settings\",\r\n    icon: SettingsIcon,\r\n    title: \"Settings\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mobileDrawer: {\r\n    width: 256,\r\n  },\r\n  desktopDrawer: {\r\n    width: 300,\r\n    top: 64,\r\n    height: \"calc(100% - 64px)\",\r\n  },\r\n  avatar: {\r\n    cursor: \"pointer\",\r\n    width: 64,\r\n    height: 64,\r\n  },\r\n  studentGroup: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    padding: theme.spacing(1),\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n  },\r\n  title: {\r\n    marginRight: \"auto\",\r\n    fontSize: \"0.87rem\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  // For handling student group nested list\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const groups = useSelector((store) => store.group.groups);\r\n  const adminName = useSelector((store) => store.auth.user.user.name);\r\n  const adminEmail = useSelector((store) => store.auth.user.user.email);\r\n  const planExpireDate = useSelector(\r\n    (store) => store.auth.user.user.plan_expire_date\r\n  );\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  // const { admin } = useContext(adminContext);\r\n  // if (!admin) {\r\n  //   return <Navigate to=\"/admin\" />;\r\n  // }\r\n  //Admin details\r\n  // const user = admin.user;\r\n\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          // src={user.avatar}\r\n          to=\"/app/account\"\r\n        />\r\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n          {adminName}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {adminEmail}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          Plan Expires On - <b>{planExpireDate} </b>\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map((item, idx) => {\r\n            if (item.title === \"Student Groups\") {\r\n              return (\r\n                <List\r\n                  key={\"Student Groups\"}\r\n                  component=\"nav\"\r\n                  aria-labelledby=\"nested-list-subheader\"\r\n                  className={classes.root}\r\n                >\r\n                  <ListItem\r\n                    button\r\n                    onClick={handleClick}\r\n                    className={classes.studentGroup}\r\n                  >\r\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      <PeopleAltIcon size={10} className={classes.icon} />\r\n                      <span primary=\"Student Groups\" className={classes.title}>\r\n                        Student Group\r\n                      </span>\r\n                    </div>\r\n\r\n                    {open ? <ExpandLess /> : <ExpandMore />}\r\n                  </ListItem>\r\n                  <Collapse\r\n                    style={{ paddingLeft: 30 }}\r\n                    in={open}\r\n                    timeout=\"auto\"\r\n                    unmountOnExit\r\n                  >\r\n                    <List component=\"div\" disablePadding>\r\n                      <NavItem\r\n                        href={\"add\"}\r\n                        title={<span>&#xFF0B; &nbsp; New</span>}\r\n                      />\r\n                      {groups &&\r\n                        groups.map((group, idx) => (\r\n                          <NavItem\r\n                            key={idx}\r\n                            href={`id=${group.id}`}\r\n                            title={group.group_name}\r\n                          />\r\n                        ))}\r\n                    </List>\r\n                  </Collapse>\r\n                </List>\r\n              );\r\n            } else {\r\n              return (\r\n                <NavItem\r\n                  href={item.href}\r\n                  key={idx}\r\n                  title={item.title}\r\n                  icon={item.icon}\r\n                />\r\n              );\r\n            }\r\n          })}\r\n        </List>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool,\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false,\r\n};\r\n\r\nexport default NavBar;\r\n","/home/adil/Code/FolioX-Frontend/src/components/Navbar/Navbar.js",[],"/home/adil/Code/FolioX-Frontend/src/components/Card/Card.js",[],"/home/adil/Code/FolioX-Frontend/src/components/CustomTypography/Typography.js",[],"/home/adil/Code/FolioX-Frontend/src/components/CustomInput/CustomInput.js",[],"/home/adil/Code/FolioX-Frontend/src/components/CustomButton/CustomButton.js",[],"/home/adil/Code/FolioX-Frontend/src/assets/style/pages/AdminRegister/RegistrationOverlay.js",[],"/home/adil/Code/FolioX-Frontend/src/assets/style/pages/AdminRegister/AdminRegister.js",[],"/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/NavBar/NavItem.js",[],"/home/adil/Code/FolioX-Frontend/src/components/Select/Select.js",[],"/home/adil/Code/FolioX-Frontend/src/components/TopBar/TopBar.js",[],"/home/adil/Code/FolioX-Frontend/src/pages/Admin/Dashboard/view/Group.js",["160","161","162","163","164","165","166","167","168","169","170","171","172","173"],"/home/adil/Code/FolioX-Frontend/src/store/group/index.js",["174","175","176"],"/home/adil/Code/FolioX-Frontend/src/store/isLoading/index.js",[],"/home/adil/Code/FolioX-Frontend/src/components/Modal/index.js",[],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":22},{"ruleId":"181","severity":1,"message":"185","line":2,"column":38,"nodeType":"183","messageId":"184","endLine":2,"endColumn":52},{"ruleId":"186","severity":1,"message":"187","line":40,"column":9,"nodeType":"188","messageId":"189","endLine":40,"endColumn":52},{"ruleId":"190","severity":1,"message":"191","line":55,"column":6,"nodeType":"192","endLine":55,"endColumn":8,"suggestions":"193"},{"ruleId":"181","severity":1,"message":"194","line":1,"column":38,"nodeType":"183","messageId":"184","endLine":1,"endColumn":48},{"ruleId":"195","severity":1,"message":"196","line":34,"column":5,"nodeType":"197","messageId":"198","endLine":34,"endColumn":13},{"ruleId":"190","severity":1,"message":"199","line":56,"column":6,"nodeType":"192","endLine":56,"endColumn":8,"suggestions":"200"},{"ruleId":"181","severity":1,"message":"194","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":27},{"ruleId":"181","severity":1,"message":"201","line":1,"column":29,"nodeType":"183","messageId":"184","endLine":1,"endColumn":38},{"ruleId":"202","severity":1,"message":"203","line":63,"column":7,"nodeType":"204","messageId":"205","endLine":63,"endColumn":15},{"ruleId":"181","severity":1,"message":"206","line":101,"column":26,"nodeType":"183","messageId":"184","endLine":101,"endColumn":33},{"ruleId":"181","severity":1,"message":"194","line":1,"column":28,"nodeType":"183","messageId":"184","endLine":1,"endColumn":38},{"ruleId":"181","severity":1,"message":"207","line":2,"column":30,"nodeType":"183","messageId":"184","endLine":2,"endColumn":38},{"ruleId":"181","severity":1,"message":"208","line":8,"column":3,"nodeType":"183","messageId":"184","endLine":8,"endColumn":15},{"ruleId":"181","severity":1,"message":"209","line":16,"column":3,"nodeType":"183","messageId":"184","endLine":16,"endColumn":15},{"ruleId":"181","severity":1,"message":"210","line":18,"column":3,"nodeType":"183","messageId":"184","endLine":18,"endColumn":15},{"ruleId":"181","severity":1,"message":"211","line":21,"column":18,"nodeType":"183","messageId":"184","endLine":21,"endColumn":33},{"ruleId":"181","severity":1,"message":"212","line":23,"column":11,"nodeType":"183","messageId":"184","endLine":23,"endColumn":19},{"ruleId":"181","severity":1,"message":"213","line":25,"column":18,"nodeType":"183","messageId":"184","endLine":25,"endColumn":33},{"ruleId":"181","severity":1,"message":"214","line":27,"column":15,"nodeType":"183","messageId":"184","endLine":27,"endColumn":27},{"ruleId":"190","severity":1,"message":"215","line":109,"column":6,"nodeType":"192","endLine":109,"endColumn":25,"suggestions":"216"},{"ruleId":"181","severity":1,"message":"217","line":16,"column":21,"nodeType":"183","messageId":"184","endLine":16,"endColumn":32},{"ruleId":"181","severity":1,"message":"218","line":63,"column":7,"nodeType":"183","messageId":"184","endLine":63,"endColumn":18},{"ruleId":"181","severity":1,"message":"219","line":65,"column":9,"nodeType":"183","messageId":"184","endLine":65,"endColumn":17},{"ruleId":"181","severity":1,"message":"220","line":88,"column":7,"nodeType":"183","messageId":"184","endLine":88,"endColumn":18},{"ruleId":"221","severity":1,"message":"222","line":96,"column":30,"nodeType":"223","messageId":"224","endLine":96,"endColumn":37},{"ruleId":"181","severity":1,"message":"225","line":111,"column":7,"nodeType":"183","messageId":"184","endLine":111,"endColumn":19},{"ruleId":"181","severity":1,"message":"226","line":160,"column":7,"nodeType":"183","messageId":"184","endLine":160,"endColumn":25},{"ruleId":"181","severity":1,"message":"227","line":185,"column":7,"nodeType":"183","messageId":"184","endLine":185,"endColumn":25},{"ruleId":"181","severity":1,"message":"228","line":301,"column":10,"nodeType":"183","messageId":"184","endLine":301,"endColumn":21},{"ruleId":"181","severity":1,"message":"229","line":303,"column":10,"nodeType":"183","messageId":"184","endLine":303,"endColumn":21},{"ruleId":"181","severity":1,"message":"230","line":310,"column":9,"nodeType":"183","messageId":"184","endLine":310,"endColumn":24},{"ruleId":"181","severity":1,"message":"231","line":314,"column":9,"nodeType":"183","messageId":"184","endLine":314,"endColumn":29},{"ruleId":"181","severity":1,"message":"232","line":319,"column":9,"nodeType":"183","messageId":"184","endLine":319,"endColumn":24},{"ruleId":"181","severity":1,"message":"233","line":323,"column":9,"nodeType":"183","messageId":"184","endLine":323,"endColumn":29},{"ruleId":"181","severity":1,"message":"182","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":22},{"ruleId":"186","severity":1,"message":"187","line":120,"column":9,"nodeType":"188","messageId":"189","endLine":120,"endColumn":45},{"ruleId":"186","severity":1,"message":"187","line":150,"column":35,"nodeType":"188","messageId":"189","endLine":150,"endColumn":71},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"no-unused-vars","'messageClear' is defined but never used.","Identifier","unusedVar","'messageSuccess' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["236"],"'useContext' is defined but never used.","no-dupe-keys","Duplicate key 'overflow'.","ObjectExpression","unexpected","React Hook useEffect has missing dependencies: 'admin_id' and 'dispatch'. Either include them or remove the dependency array.",["237"],"'useEffect' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'message' is assigned a value but never used.","'Navigate' is defined but never used.","'ListItemLink' is defined but never used.","'ListItemText' is defined but never used.","'ListItemIcon' is defined but never used.","'AlertCircleIcon' is defined but never used.","'LockIcon' is defined but never used.","'ShoppingBagIcon' is defined but never used.","'UserPlusIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'onMobileClose' and 'openMobile'. Either include them or remove the dependency array. If 'onMobileClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["238"],"'useNavigate' is defined but never used.","'GroupHeader' is assigned a value but never used.","'admin_id' is assigned a value but never used.","'OtherGroups' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'StudentTable' is assigned a value but never used.","'DeleteStudentModal' is assigned a value but never used.","'UpdateStudentModal' is assigned a value but never used.","'deleteModal' is assigned a value but never used.","'updateModal' is assigned a value but never used.","'openDeleteModal' is assigned a value but never used.","'deleteStudentHandler' is assigned a value but never used.","'openUpdateModal' is assigned a value but never used.","'updateStudentHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},"Update the dependencies array to be: [dispatch]",{"range":"245","text":"246"},"Update the dependencies array to be: [admin_id, dispatch]",{"range":"247","text":"248"},"Update the dependencies array to be: [location.pathname, onMobileClose, openMobile]",{"range":"249","text":"250"},[1553,1555],"[dispatch]",[1593,1595],"[admin_id, dispatch]",[2482,2501],"[location.pathname, onMobileClose, openMobile]"]