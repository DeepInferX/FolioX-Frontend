[{"F:\\React\\foliox\\src\\index.js":"1","F:\\React\\foliox\\src\\App.js":"2","F:\\React\\foliox\\src\\reportWebVitals.js":"3","F:\\React\\foliox\\src\\components\\EmailVerifySuccess.js":"4","F:\\React\\foliox\\src\\components\\Home.js":"5","F:\\DeepInfer-x\\FolioX-Frontend\\src\\index.js":"6","F:\\DeepInfer-x\\FolioX-Frontend\\src\\App.js":"7","F:\\DeepInfer-x\\FolioX-Frontend\\src\\components\\Navbar\\Navbar.js":"8","F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\components\\Navbar\\Navbar.js":"9","F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\pages\\Landing\\Landing.js":"10","F:\\DeepInfer-x\\FolioX-Frontend\\src\\components\\CustomButton\\CustomButton.js":"11","F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\components\\CustomButton\\CustomeButton.js":"12","F:\\DeepInfer-x\\FolioX-Frontend\\src\\components\\Card\\Card.js":"13","F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\components\\Card\\Card.js":"14","F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\pages\\GetStarted\\GetStarted.js":"15","F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\GetStarted\\GetStarted.js":"16","F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Landing\\Landing.js":"17","F:\\DeepInfer-x\\FolioX-Frontend\\src\\components\\CustomTypography\\Typography.js":"18","F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\components\\CustomTypography\\CustomTypography.js":"19","F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\pages\\AdminRegister\\AdminRegister.js":"20","F:\\DeepInfer-x\\FolioX-Frontend\\src\\components\\CustomInput\\CustomInput.js":"21","F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\components\\CustomInput\\CustomInput.js":"22","F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\pages\\AdminLogin.js":"23","F:\\DeepInfer-x\\FolioX-Frontend\\src\\components\\Select\\Select.js":"24","F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\components\\Select.js":"25","F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\pages\\AdminRegister\\RegistrationOverlay.js":"26","F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\AdminLogin\\AdminLogin.js":"27","F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\AdminOption\\AdminOption.js":"28","F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\AdminRegister\\AdminRegister.js":"29","F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\AdminRegister\\RegistrationOverlay.js":"30","F:\\DeepInfer-x\\FolioX-Frontend\\src\\routes.js":"31","F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\DashboardLayout.js":"32","F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\NavBar\\index.js":"33","F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\NavBar\\NavItem.js":"34","F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\TopBar.js":"35","F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\view\\Home.js":"36","F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\AdminContext.js":"37","F:\\DeepInfer-x\\FolioX-Frontend\\src\\components\\LoadingSpinner\\LoadingSpinner.js":"38","F:\\DeepInfer-x\\FolioX-Frontend\\src\\store.js":"39","F:\\DeepInfer-x\\FolioX-Frontend\\src\\reducer\\index.js":"40"},{"size":500,"mtime":499162500000,"results":"41","hashOfConfig":"42"},{"size":521,"mtime":1609758714685,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"42"},{"size":1789,"mtime":1609760298998,"results":"45","hashOfConfig":"42"},{"size":128,"mtime":1609758360629,"results":"46","hashOfConfig":"42"},{"size":523,"mtime":1614059499657,"results":"47","hashOfConfig":"48"},{"size":230,"mtime":1614058676446,"results":"49","hashOfConfig":"48"},{"size":829,"mtime":1612764125136,"results":"50","hashOfConfig":"48"},{"size":556,"mtime":1610448101959,"results":"51","hashOfConfig":"48"},{"size":672,"mtime":1610444184717,"results":"52","hashOfConfig":"48"},{"size":1082,"mtime":1612782671703,"results":"53","hashOfConfig":"48"},{"size":750,"mtime":1610911095514,"results":"54","hashOfConfig":"48"},{"size":1455,"mtime":1610528576708,"results":"55","hashOfConfig":"48"},{"size":551,"mtime":1610529244041,"results":"56","hashOfConfig":"48"},{"size":326,"mtime":1610529644407,"results":"57","hashOfConfig":"48"},{"size":1434,"mtime":1612766569728,"results":"58","hashOfConfig":"48"},{"size":1396,"mtime":1612766552115,"results":"59","hashOfConfig":"48"},{"size":542,"mtime":1610901039209,"results":"60","hashOfConfig":"48"},{"size":240,"mtime":1610897278117,"results":"61","hashOfConfig":"48"},{"size":670,"mtime":1612788692523,"results":"62","hashOfConfig":"48"},{"size":889,"mtime":1612768898036,"results":"63","hashOfConfig":"48"},{"size":745,"mtime":1610911188930,"results":"64","hashOfConfig":"48"},{"size":133,"mtime":1612338648386,"results":"65","hashOfConfig":"48"},{"size":613,"mtime":1612842792424,"results":"66","hashOfConfig":"48"},{"size":765,"mtime":1612340351614,"results":"67","hashOfConfig":"48"},{"size":549,"mtime":1612519473623,"results":"68","hashOfConfig":"48"},{"size":5722,"mtime":1613111529876,"results":"69","hashOfConfig":"48"},{"size":1441,"mtime":1612766634852,"results":"70","hashOfConfig":"48"},{"size":9300,"mtime":1612842825760,"results":"71","hashOfConfig":"48"},{"size":1515,"mtime":1612519417954,"results":"72","hashOfConfig":"48"},{"size":1412,"mtime":1613110122346,"results":"73","hashOfConfig":"48"},{"size":1943,"mtime":1613111948446,"results":"74","hashOfConfig":"48"},{"size":4957,"mtime":1613112383581,"results":"75","hashOfConfig":"48"},{"size":1722,"mtime":1612930726309,"results":"76","hashOfConfig":"48"},{"size":1698,"mtime":1612931010449,"results":"77","hashOfConfig":"48"},{"size":256,"mtime":1613111623072,"results":"78","hashOfConfig":"48"},{"size":571,"mtime":1613111595638,"results":"79","hashOfConfig":"48"},{"size":498,"mtime":1614058962840,"results":"80","hashOfConfig":"48"},{"size":225,"mtime":1614059419157,"results":"81","hashOfConfig":"48"},{"size":117,"mtime":1614059609323,"results":"82","hashOfConfig":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"5s6vl1",{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"85"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"1zhvsu",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"97"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"97"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"97"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"97"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"97"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\React\\foliox\\src\\index.js",[],["173","174"],"F:\\React\\foliox\\src\\App.js",["175"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport EmailVerifySuccess from \"./components/EmailVerifySuccess\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/email-verify-success\" component={EmailVerifySuccess} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","F:\\React\\foliox\\src\\reportWebVitals.js",[],"F:\\React\\foliox\\src\\components\\EmailVerifySuccess.js",[],"F:\\React\\foliox\\src\\components\\Home.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\index.js",[],["176","177"],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\App.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\components\\Navbar\\Navbar.js",["178"],"import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport useStyle from \"assets/style/components/Navbar/Navbar\";\r\nexport default function Navbar({ logo, appbar }) {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <img src={logo} width=\"40\" alt=\"dix logo\" />\r\n      </div>\r\n      {appbar && (\r\n        <div>\r\n          <NavLink className={classes.navLink} to=\"/\">\r\n            Contact\r\n          </NavLink>\r\n          <a\r\n            className={classNames(classes.navLink, classes.navLinkButton)}\r\n            href=\"http://deepinferx.in/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            {\" \"}\r\n            Dix\r\n          </a>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\components\\Navbar\\Navbar.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\pages\\Landing\\Landing.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\components\\CustomButton\\CustomButton.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\components\\CustomButton\\CustomeButton.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\components\\Card\\Card.js",["179"],"import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport useStyles from \"assets/style/components/Card/Card\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport classNames from \"classnames\";\r\nexport default function ImgMediaCard({ text, to, Img, ...rest }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <NavLink to={to} style={{ textDecoration: \"none\" }}>\r\n      <Box boxShadow={10} className={classNames(classes.root, classes.box)}>\r\n        <div className={classes.root}>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              alt=\"Contemplative Reptile\"\r\n              title=\"Contemplative Reptile\"\r\n              className={classes.imgContainer}\r\n            >\r\n              <img className={classes.img} src={Img} alt=\"login\" />\r\n            </CardMedia>\r\n            <CardContent>\r\n              <Typography\r\n                className={classes.text}\r\n                variant=\"subtitle1\"\r\n                align=\"center\"\r\n                component=\"p\"\r\n              >\r\n                {text}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </div>\r\n      </Box>\r\n    </NavLink>\r\n  );\r\n}\r\n","F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\components\\Card\\Card.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\pages\\GetStarted\\GetStarted.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\GetStarted\\GetStarted.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Landing\\Landing.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\components\\CustomTypography\\Typography.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\components\\CustomTypography\\CustomTypography.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\pages\\AdminRegister\\AdminRegister.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\components\\CustomInput\\CustomInput.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\components\\CustomInput\\CustomInput.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\pages\\AdminLogin.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\components\\Select\\Select.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\components\\Select.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\assets\\style\\pages\\AdminRegister\\RegistrationOverlay.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\AdminLogin\\AdminLogin.js",["180","181"],"import { Grid } from \"@material-ui/core\";\r\nimport React, { useEffect, useContext } from \"react\";\r\nimport Navbar from \"components/Navbar/Navbar\";\r\nimport fx from \"assets/logo/fx.png\";\r\nimport Typography from \"components/CustomTypography/Typography\";\r\nimport useStyles from \"assets/style/pages/AdminLogin\";\r\nimport CustomInput from \"components/CustomInput/CustomInput\";\r\nimport CustomButton from \"components/CustomButton/CustomButton\";\r\nimport image from \"assets/img/admin-login-image.svg\";\r\nimport Select from \"components/Select/Select\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { adminContext } from \"pages/Admin/AdminContext\";\r\nimport { Navigate } from \"react-router-dom\";\r\nconst circle = <span>&#9675;&nbsp;</span>;\r\n\r\nexport default function Landing() {\r\n  const [selectedCollege, setSelectedCollege] = useState(\"\");\r\n  const [collegeList, setCollegeList] = useState([]);\r\n  const [error, setError] = useState({ message: \"\" });\r\n  const [loginCredentials, setLoginCredentials] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { admin, setAdmin } = useContext(adminContext);\r\n\r\n  //Api call to get list of registered colleges\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://foliox.deepinferx.in/web/api/gen/colleges\")\r\n      .then((res) => {\r\n        const { success } = res.data;\r\n        if (success === 1) {\r\n          setCollegeList(res.data.colleges);\r\n        } else {\r\n          setError({ ...error, message: \"Something went wrong!\" });\r\n        }\r\n      })\r\n      .catch((e) => console.log(e));\r\n  }, []);\r\n\r\n  //Error Notification handler\r\n  useEffect(() => {\r\n    error.message.length > 0 && errorNotification();\r\n  }, [error.message]);\r\n\r\n  //Form submit handler\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"college_id\", selectedCollege);\r\n    formData.append(\"email\", loginCredentials.email);\r\n    formData.append(\"password\", loginCredentials.password);\r\n\r\n    axios\r\n      .post(\"http://foliox.deepinferx.in/web/api/admin/login\", formData)\r\n      .then((res) => {\r\n        const { success } = res.data;\r\n        if (success === 1) {\r\n          setAdmin(res.data);\r\n        }\r\n        if (success === 0) {\r\n          setError({ ...error, message: res.data.message });\r\n        }\r\n      }, []);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  //Toast Notification for showing error to users\r\n  const errorNotification = () =>\r\n    toast.error(error.message, {\r\n      position: \"bottom-center\",\r\n      autoClose: false,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n  // const Navigate = useNavigate();\r\n  if (admin) {\r\n    return <Navigate to=\"/admin/dashboard\" replace />;\r\n  }\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <ToastContainer\r\n        position=\"bottom-center\"\r\n        autoClose={false}\r\n        newestOnTop\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n      />\r\n      <Grid\r\n        className={classes.main}\r\n        container\r\n        direction=\"column\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <Grid item style={{ height: \"100px\" }}>\r\n          <Navbar logo={fx} />\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography\r\n            variant=\"h4\"\r\n            align=\"center\"\r\n            component=\"p\"\r\n            fontWeight=\"800\"\r\n          >\r\n            Please enter your credentials\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          justify=\"space-around\"\r\n          alignItems=\"center\"\r\n          style={{ flexGrow: \"1\" }}\r\n          container\r\n          direction=\"row\"\r\n        >\r\n          <Grid item xs={4}>\r\n            <Select\r\n              background=\"brown\"\r\n              selectedCollege={selectedCollege}\r\n              setSelectedCollege={setSelectedCollege}\r\n              required\r\n            >\r\n              <option value=\"\" disabled selected hidden>\r\n                Select college\r\n              </option>\r\n              {collegeList.map((college) => (\r\n                <option key={college.id} value={college.id}>\r\n                  {college.college_name}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n            <CustomInput\r\n              label=\"Email\"\r\n              background=\"brown\"\r\n              fullWidth\r\n              required\r\n              value={loginCredentials.email}\r\n              onChange={(e) =>\r\n                setLoginCredentials({\r\n                  ...loginCredentials,\r\n                  email: e.target.value,\r\n                })\r\n              }\r\n            ></CustomInput>\r\n            <CustomInput\r\n              label=\"Password\"\r\n              background=\"brown\"\r\n              fullWidth\r\n              required\r\n              value={loginCredentials.password}\r\n              onChange={(e) =>\r\n                setLoginCredentials({\r\n                  ...loginCredentials,\r\n                  password: e.target.value,\r\n                })\r\n              }\r\n            ></CustomInput>\r\n            <CustomButton\r\n              text={\"Forgot?\"}\r\n              logo={circle}\r\n              to={\"/get-started/\"}\r\n              background=\"white\"\r\n              border=\"borderGray\"\r\n            />\r\n            <CustomButton type=\"submit\" text={\"Continue\"} background=\"brown\" />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item justify=\"flex-start\">\r\n          <img src={image} width=\"300\" alt=\"admin login\" />\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\AdminOption\\AdminOption.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\AdminRegister\\AdminRegister.js",["182","183"],"import { Grid } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"components/Navbar/Navbar\";\r\nimport fx from \"assets/logo/fx.png\";\r\nimport Typography from \"components/CustomTypography/Typography\";\r\nimport useStyles from \"assets/style/pages/AdminRegister/AdminRegister\";\r\nimport CustomInput from \"components/CustomInput/CustomInput\";\r\nimport CustomButton from \"components/CustomButton/CustomButton\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nconst circle = <span>&#9675;&nbsp;</span>;\r\n\r\nexport default function Landing(props) {\r\n  //States for all the input field\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mobileNumber, setMobileNumber] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [collegeName, setCollegeName] = useState(\"\");\r\n  const [collegeLinkedin, setCollegeLinkedin] = useState(\"\");\r\n  const [collegeAddress, setCollegeAddress] = useState(\"\");\r\n\r\n  //State for showing storing error message\r\n  const [error, setError] = useState({ message: \"\" });\r\n\r\n  useEffect(() => {\r\n    error.message !== \"\" && errorNotification();\r\n  }, [error.message]);\r\n  /**\r\n   * Function for handling change in input field\r\n   * @param event\r\n   *\r\n   */\r\n\r\n  const handelChange = ({ target: { name: type, value } }) => {\r\n    switch (type) {\r\n      case \"Name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"Email\":\r\n        setEmail(value);\r\n        break;\r\n\r\n      case \"MobileNumber\":\r\n        setMobileNumber(value);\r\n        break;\r\n\r\n      case \"Password\":\r\n        setPassword(value);\r\n        break;\r\n\r\n      case \"ConfirmPassword\":\r\n        setConfirmPassword(value);\r\n        break;\r\n\r\n      case \"CollegeName\":\r\n        setCollegeName(value);\r\n        break;\r\n\r\n      case \"CollegeLinkedin\":\r\n        setCollegeLinkedin(value);\r\n        break;\r\n\r\n      case \"CollegeAddress\":\r\n        setCollegeAddress(value);\r\n\r\n      default:\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Function to handler Register submit\r\n   * @param event\r\n   */\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setName((name) => name.trim());\r\n    setEmail((email) => email.trim());\r\n    setMobileNumber((mobileNumber) => mobileNumber.trim());\r\n    setPassword((password) => password.trim());\r\n    setConfirmPassword((confirmPassword) => confirmPassword.trim());\r\n    setCollegeName((collegeName) => collegeName.trim());\r\n    setCollegeLinkedin((collegeLinkedin) => collegeLinkedin.trim());\r\n    setCollegeAddress((collegeAddress) => collegeAddress.trim());\r\n\r\n    //Error notification when password and confirm password didn't match\r\n    if (password !== confirmPassword) {\r\n      setError({ message: \"Password didn't match\" });\r\n\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"email\", email);\r\n    formData.append(\"mobile\", mobileNumber);\r\n    formData.append(\"password\", password);\r\n    formData.append(\"college_name\", collegeName);\r\n    formData.append(\"college_linked_in\", collegeLinkedin);\r\n    formData.append(\"college_add\", collegeAddress);\r\n    axios\r\n      .post(\"http://foliox.deepinferx.in/web/api/admin/register\", formData)\r\n      .then((res) => {\r\n        const { success, message } = res.data;\r\n\r\n        //if success = 0 something wrong\r\n        if (success === 0) {\r\n          setTimeout(() => {\r\n            setError({ message });\r\n          }, 100);\r\n        }\r\n\r\n        //if success = 1 Registeration successfull\r\n        if (success === 1) {\r\n          props.history.push(\"/admin/registration-confirmation-overlay\");\r\n        }\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  //Toast Notification for showing error to users\r\n  const errorNotification = () =>\r\n    toast.error(error.message, {\r\n      position: \"bottom-center\",\r\n      autoClose: false,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className={classes.root}>\r\n      <ToastContainer\r\n        position=\"bottom-center\"\r\n        autoClose={false}\r\n        newestOnTop\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n      />\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        style={{\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        <Grid item className={classes.top}></Grid>\r\n        <Grid className={classes.main} item container>\r\n          <Grid item xs={12} style={{ height: \"100px\" }}>\r\n            <Navbar logo={fx} />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.title}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              align=\"center\"\r\n              component=\"p\"\r\n              fontWeight=\"800\"\r\n            >\r\n              Registration From\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            direction=\"row\"\r\n            justify=\"space-around\"\r\n            style={{ flexGrow: \"1\" }}\r\n            container\r\n          >\r\n            <Grid item className={classes.mainLeft} xs={4}>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                align=\"center\"\r\n                component=\"p\"\r\n                fontWeight=\"800\"\r\n                gutterBottom\r\n              >\r\n                Personal Details\r\n              </Typography>\r\n\r\n              <CustomInput\r\n                label=\"Name*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={name}\r\n                name=\"Name\"\r\n                onChange={handelChange}\r\n                autoFocus\r\n                required\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"E-mail*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={email}\r\n                name=\"Email\"\r\n                onChange={handelChange}\r\n                required\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"Mobile Number*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={mobileNumber}\r\n                name=\"MobileNumber\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"Password*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={password}\r\n                type=\"password\"\r\n                name=\"Password\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"Confirm Password*\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={confirmPassword}\r\n                name=\"ConfirmPassword\"\r\n                type=\"password\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                align=\"center\"\r\n                component=\"p\"\r\n                fontWeight=\"800\"\r\n                gutterBottom\r\n              >\r\n                College Details\r\n              </Typography>\r\n              <CustomInput\r\n                background=\"brown\"\r\n                label=\"College Name *\"\r\n                fullWidth\r\n                value={collegeName}\r\n                name=\"CollegeName\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomInput\r\n                label=\"College LinkedIn Profile\"\r\n                background=\"brown\"\r\n                fullWidth\r\n                value={collegeLinkedin}\r\n                name=\"CollegeLinkedin\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomInput\r\n                background=\"brown\"\r\n                label=\"College Address *\"\r\n                fullWidth\r\n                multiline\r\n                rows=\"5\"\r\n                cols=\"30\"\r\n                value={collegeAddress}\r\n                name=\"CollegeAddress\"\r\n                required\r\n                onChange={handelChange}\r\n              ></CustomInput>\r\n              <CustomButton\r\n                text={\"Login\"}\r\n                logo={circle}\r\n                to={\"/admin/login\"}\r\n                background=\"white\"\r\n                border=\"borderGray\"\r\n              />\r\n              <CustomButton\r\n                type=\"submit\"\r\n                text={\"Register\"}\r\n                background=\"brown\"\r\n              />\r\n            </Grid>\r\n            <Grid item container justify=\"center\" alignItems=\"center\" xs={12}>\r\n              <Typography variant=\"subtitle2\" align=\"center\">\r\n                * The (*) marked fields are required. Read our policy to know\r\n                how we use your data.\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\AdminRegister\\RegistrationOverlay.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\routes.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\DashboardLayout.js",["184","185"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport NavBar from \"./NavBar\";\r\nimport TopBar from \"./TopBar\";\r\nimport axios from \"axios\";\r\nimport { adminContext } from \"../AdminContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n    width: \"100%\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flex: \"1 1 auto\",\r\n    overflow: \"hidden\",\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: 256,\r\n    },\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n    flex: \"1 1 auto\",\r\n  },\r\n  content: {\r\n    flex: \"1 1 auto\",\r\n    height: \"100%\",\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n\r\nconst DashboardLayout = (props) => {\r\n  const classes = useStyles();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n  const { groups, setGroups } = useContext(adminContext);\r\n  console.log(props);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"http://foliox.deepinferx.in/web/api/admin/students/groups/get?admin=15\"\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        const { success } = res.data;\r\n        if (success === 0) {\r\n          setGroups(res.data.groups);\r\n          console.log(res.data.groups);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\NavBar\\index.js",["186","187","188","189","190","191"],"import React, { useEffect, useContext } from \"react\";\r\nimport { Link as RouterLink, Navigate, useLocation } from \"react-router-dom\";\r\nimport { adminContext } from \"pages/Admin/AdminContext\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  ListItemLink,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles,\r\n  ListItem,\r\n  ListItemText,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  Settings as SettingsIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  Users as UsersIcon,\r\n} from \"react-feather\";\r\nimport NavItem from \"./NavItem\";\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\r\n\r\nconst items = [\r\n  {\r\n    href: \"/admin/dashboard\",\r\n    icon: BarChartIcon,\r\n    title: \"Dashboard\",\r\n  },\r\n  {\r\n    href: \"/admin/student-group\",\r\n    icon: UsersIcon,\r\n    title: \"Student Groups\",\r\n  },\r\n\r\n  {\r\n    href: \"/app/account\",\r\n    icon: UserIcon,\r\n    title: \"Account\",\r\n  },\r\n  {\r\n    href: \"/app/settings\",\r\n    icon: SettingsIcon,\r\n    title: \"Settings\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256,\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: \"calc(100% - 64px)\",\r\n  },\r\n  avatar: {\r\n    cursor: \"pointer\",\r\n    width: 64,\r\n    height: 64,\r\n  },\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  // For handling student group nested list\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const { groups } = useContext(adminContext);\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const { admin } = useContext(adminContext);\r\n  if (!admin) {\r\n    return <Navigate to=\"/admin\" />;\r\n  }\r\n  //Admin details\r\n  const user = admin.user;\r\n\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          to=\"/app/account\"\r\n        />\r\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n          {user.name}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {user.email}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          Plan Expires On - <b>{user.plan_expire_date} </b>\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map((item) => {\r\n            if (item.title === \"Student Groups\") {\r\n              return (\r\n                <List\r\n                  component=\"nav\"\r\n                  aria-labelledby=\"nested-list-subheader\"\r\n                  className={classes.root}\r\n                >\r\n                  <ListItem button onClick={handleClick}>\r\n                    <ListItemText primary=\"Student Groups\" />\r\n                    {open ? <ExpandLess /> : <ExpandMore />}\r\n                  </ListItem>\r\n                  <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                      {groups.map((group) => (\r\n                        <NavItem href={group.id}>\r\n                          <ListItem button className={classes.nested}>\r\n                            <ListItemText primary={group.group_name} />\r\n                          </ListItem>\r\n                        </NavItem>\r\n                      ))}\r\n                    </List>\r\n                  </Collapse>\r\n                </List>\r\n              );\r\n            } else {\r\n              return (\r\n                <NavItem\r\n                  href={item.href}\r\n                  key={item.title}\r\n                  title={item.title}\r\n                  icon={item.icon}\r\n                />\r\n              );\r\n            }\r\n          })}\r\n        </List>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool,\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false,\r\n};\r\n\r\nexport default NavBar;\r\n","F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\NavBar\\NavItem.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\TopBar.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\Dashboard\\view\\Home.js",["192"],"import { adminContext } from \"pages/Admin/AdminContext\";\r\nimport React, { useContext } from \"react\";\r\n\r\nexport default function Home() {\r\n  const { groups } = useContext(adminContext);\r\n  return (\r\n    <div>\r\n      <h1>Home Page</h1>\r\n    </div>\r\n  );\r\n}\r\n","F:\\DeepInfer-x\\FolioX-Frontend\\src\\pages\\Admin\\AdminContext.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\components\\LoadingSpinner\\LoadingSpinner.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\store.js",[],"F:\\DeepInfer-x\\FolioX-Frontend\\src\\reducer\\index.js",[],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":1,"column":8,"nodeType":"199","messageId":"200","endLine":1,"endColumn":12},{"ruleId":"193","replacedBy":"201"},{"ruleId":"195","replacedBy":"202"},{"ruleId":"197","severity":1,"message":"203","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":14},{"ruleId":"197","severity":1,"message":"204","line":2,"column":8,"nodeType":"199","messageId":"200","endLine":2,"endColumn":12},{"ruleId":"205","severity":1,"message":"206","line":43,"column":6,"nodeType":"207","endLine":43,"endColumn":8,"suggestions":"208"},{"ruleId":"205","severity":1,"message":"209","line":48,"column":6,"nodeType":"207","endLine":48,"endColumn":21,"suggestions":"210"},{"ruleId":"205","severity":1,"message":"209","line":30,"column":6,"nodeType":"207","endLine":30,"endColumn":21,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":70,"column":7,"nodeType":"214","messageId":"215","endLine":70,"endColumn":15},{"ruleId":"197","severity":1,"message":"216","line":40,"column":11,"nodeType":"199","messageId":"200","endLine":40,"endColumn":17},{"ruleId":"205","severity":1,"message":"217","line":55,"column":6,"nodeType":"207","endLine":55,"endColumn":8,"suggestions":"218"},{"ruleId":"197","severity":1,"message":"219","line":8,"column":3,"nodeType":"199","messageId":"200","endLine":8,"endColumn":15},{"ruleId":"197","severity":1,"message":"220","line":20,"column":18,"nodeType":"199","messageId":"200","endLine":20,"endColumn":33},{"ruleId":"197","severity":1,"message":"221","line":22,"column":11,"nodeType":"199","messageId":"200","endLine":22,"endColumn":19},{"ruleId":"197","severity":1,"message":"222","line":24,"column":18,"nodeType":"199","messageId":"200","endLine":24,"endColumn":33},{"ruleId":"197","severity":1,"message":"223","line":26,"column":15,"nodeType":"199","messageId":"200","endLine":26,"endColumn":27},{"ruleId":"205","severity":1,"message":"224","line":88,"column":6,"nodeType":"207","endLine":88,"endColumn":25,"suggestions":"225"},{"ruleId":"197","severity":1,"message":"216","line":5,"column":11,"nodeType":"199","messageId":"200","endLine":5,"endColumn":17},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["226"],["227"],"'Link' is defined but never used.","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.","ArrayExpression",["228"],"React Hook useEffect has a missing dependency: 'errorNotification'. Either include it or remove the dependency array.",["229"],["230"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'groups' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setGroups'. Either include it or remove the dependency array.",["231"],"'ListItemLink' is defined but never used.","'AlertCircleIcon' is defined but never used.","'LockIcon' is defined but never used.","'ShoppingBagIcon' is defined but never used.","'UserPlusIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'onMobileClose' and 'openMobile'. Either include them or remove the dependency array. If 'onMobileClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["232"],"no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"235","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},"Update the dependencies array to be: [error]",{"range":"242","text":"243"},"Update the dependencies array to be: [error.message, errorNotification]",{"range":"244","text":"245"},{"range":"246","text":"245"},"Update the dependencies array to be: [setGroups]",{"range":"247","text":"248"},"Update the dependencies array to be: [location.pathname, onMobileClose, openMobile]",{"range":"249","text":"250"},[1668,1670],"[error]",[1788,1803],"[error.message, errorNotification]",[1321,1336],[1437,1439],"[setGroups]",[1839,1858],"[location.pathname, onMobileClose, openMobile]"]